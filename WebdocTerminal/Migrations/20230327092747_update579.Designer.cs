// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebdocTerminal.Data;

namespace WebdocTerminal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230327092747_update579")]
    partial class update579
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ACK", b =>
                {
                    b.Property<long>("ACKId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Direction");

                    b.Property<string>("FileErrorCode");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageId");

                    b.Property<DateTime>("Performed");

                    b.Property<string>("Receiver");

                    b.Property<int>("RecordErrorCode");

                    b.Property<int>("RecordNo");

                    b.Property<string>("Sender");

                    b.Property<string>("Status");

                    b.Property<string>("VIRNo");

                    b.HasKey("ACKId");

                    b.ToTable("ACK");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AICTAndLineIndexTariff", b =>
                {
                    b.Property<long>("AICTAndLineIndexTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AICTPerCBMRate");

                    b.Property<double>("AICTPerCBMRateShareRate");

                    b.Property<double>("AICTPerIndexRate");

                    b.Property<double>("AICTPerIndexRateShareRate");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double>("FFPerCBMRate");

                    b.Property<double>("FFPerCBMRateShareRate");

                    b.Property<double>("FFPerIndexRate");

                    b.Property<double>("FFPerIndexRateShareRate");

                    b.Property<int>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Status");

                    b.Property<double>("TotalCBMRate");

                    b.Property<double>("TotalPerIndexRate");

                    b.Property<string>("VirNumber");

                    b.HasKey("AICTAndLineIndexTariffId");

                    b.ToTable("AICTAndLineIndexTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AmountReceived", b =>
                {
                    b.Property<long>("AmountReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AACR");

                    b.Property<DateTime>("AmountReceivedDate");

                    b.Property<int>("BalanceAmount");

                    b.Property<int>("BalanceLedgerAmount");

                    b.Property<int>("BillAmount");

                    b.Property<int>("CashAmount");

                    b.Property<int>("ChequeAmount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int>("Discount");

                    b.Property<long?>("InvoiceId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("PartyId");

                    b.Property<int>("SalesTax");

                    b.Property<string>("Type");

                    b.HasKey("AmountReceivedId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PartyId");

                    b.ToTable("AmountReceived");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AmountReceivedExport", b =>
                {
                    b.Property<long>("AmountReceivedExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AACR");

                    b.Property<DateTime>("AmountReceivedDate");

                    b.Property<int>("BalanceAmount");

                    b.Property<int>("BalanceLedgerAmount");

                    b.Property<int>("BillAmount");

                    b.Property<int>("CashAmount");

                    b.Property<int>("ChequeAmount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int>("Discount");

                    b.Property<long?>("InvoiceExportId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("PartyExportId");

                    b.Property<int>("SalesTax");

                    b.Property<string>("Type");

                    b.HasKey("AmountReceivedExportId");

                    b.HasIndex("InvoiceExportId");

                    b.HasIndex("PartyExportId");

                    b.ToTable("AmountReceivedExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AppPage", b =>
                {
                    b.Property<long>("AppPageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PageName");

                    b.Property<string>("PageType");

                    b.Property<string>("PageUrl");

                    b.HasKey("AppPageId");

                    b.ToTable("AppPage");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AppPageItem", b =>
                {
                    b.Property<long>("AppPageItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AppPageId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FieldName");

                    b.Property<bool?>("IsChecked");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("RoleId");

                    b.HasKey("AppPageItemId");

                    b.HasIndex("AppPageId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppPageItem");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Auction", b =>
                {
                    b.Property<long>("AuctionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AuctionDate");

                    b.Property<string>("AuctionLotNumber");

                    b.Property<string>("BankVoucherNo25");

                    b.Property<string>("BankVoucherNo75");

                    b.Property<long?>("BidderId");

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("CustomDoDate");

                    b.Property<long?>("CustomDoNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double?>("FinalBidAmount");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("AuctionId");

                    b.HasIndex("BidderId");

                    b.HasIndex("CYContainerId")
                        .IsUnique()
                        .HasFilter("[CYContainerId] IS NOT NULL");

                    b.HasIndex("ContainerIndexId")
                        .IsUnique()
                        .HasFilter("[ContainerIndexId] IS NOT NULL");

                    b.ToTable("Auction");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AuctionAmount", b =>
                {
                    b.Property<long>("AuctionAmountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CBM");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double>("HanndlingWeight");

                    b.Property<bool>("IsDeleted");

                    b.Property<double>("Rate20");

                    b.Property<double>("Rate40");

                    b.Property<double>("Rate45");

                    b.Property<double>("Weight");

                    b.HasKey("AuctionAmountId");

                    b.ToTable("AuctionAmount");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Audit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("KeyValues");

                    b.Property<string>("NewValues");

                    b.Property<string>("OldValues");

                    b.Property<string>("TableName");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AutoExaminationCharge", b =>
                {
                    b.Property<long>("AutoExaminationChargeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoExaminationChargeName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double>("ExaminationChargeAmount20");

                    b.Property<double>("ExaminationChargeAmount40");

                    b.Property<double>("ExaminationChargeAmount45");

                    b.Property<long>("ExaminationChargeId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("AutoExaminationChargeId");

                    b.HasIndex("ExaminationChargeId");

                    b.ToTable("AutoExaminationCharge");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Bank", b =>
                {
                    b.Property<long>("BankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Type");

                    b.HasKey("BankId");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("WebdocTerminal.Models.BankBranch", b =>
                {
                    b.Property<long>("BankBranchId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankBranchCode");

                    b.Property<string>("BankBranchName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("BankBranchId");

                    b.ToTable("BankBranch");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Bidder", b =>
                {
                    b.Property<long>("BidderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BidderName");

                    b.Property<string>("BidderNic");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("BidderId");

                    b.ToTable("Bidder");
                });

            modelBuilder.Entity("WebdocTerminal.Models.BillToLine", b =>
                {
                    b.Property<long>("BillToLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("IndexNo");

                    b.Property<string>("IndexType");

                    b.Property<bool>("InoviceCreated");

                    b.Property<double>("InvoiceAmount");

                    b.Property<string>("InvoiceNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<double>("TariffAmount");

                    b.Property<string>("Type");

                    b.Property<string>("VirNo");

                    b.HasKey("BillToLineId");

                    b.ToTable("BillToLine");
                });

            modelBuilder.Entity("WebdocTerminal.Models.BRT", b =>
                {
                    b.Property<long>("BRTId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BRTLocationId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<long?>("CyContainerId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.HasKey("BRTId");

                    b.HasIndex("BRTLocationId");

                    b.HasIndex("ContainerIndexId")
                        .IsUnique()
                        .HasFilter("[ContainerIndexId] IS NOT NULL");

                    b.HasIndex("CyContainerId");

                    b.ToTable("BRT");
                });

            modelBuilder.Entity("WebdocTerminal.Models.BrtItem", b =>
                {
                    b.Property<long>("BrtItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BRTId");

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsCancelled");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("NumberOfItems");

                    b.Property<string>("PackageLocation");

                    b.HasKey("BrtItemId");

                    b.HasIndex("BRTId");

                    b.ToTable("BrtItems");
                });

            modelBuilder.Entity("WebdocTerminal.Models.BRTLocation", b =>
                {
                    b.Property<long>("BRTLocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BRTLocationCode");

                    b.Property<string>("BRTLocationName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("BRTLocationId");

                    b.ToTable("BRTLocation");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Cargo", b =>
                {
                    b.Property<long>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("CBM");

                    b.Property<long?>("CargoReceivedId");

                    b.Property<string>("ColorCode");

                    b.Property<long?>("CommodityId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DishargePort");

                    b.Property<long?>("ExportContainerId");

                    b.Property<string>("FinalDestination");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("IssueDate");

                    b.Property<long?>("LoadingProgramDetailId");

                    b.Property<string>("Location");

                    b.Property<string>("PLIDNumber");

                    b.Property<int?>("PackageReceived");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<string>("TRNumber");

                    b.Property<long?>("VesselExportId");

                    b.Property<long?>("VoyageExportId");

                    b.Property<string>("WarehouseLocation");

                    b.Property<double?>("Weight");

                    b.HasKey("CargoId");

                    b.HasIndex("CargoReceivedId");

                    b.HasIndex("CommodityId");

                    b.HasIndex("ExportContainerId");

                    b.HasIndex("LoadingProgramDetailId")
                        .IsUnique()
                        .HasFilter("[LoadingProgramDetailId] IS NOT NULL");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("VesselExportId");

                    b.HasIndex("VoyageExportId");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CargoReceived", b =>
                {
                    b.Property<long>("CargoReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLearingAgentReprsentative");

                    b.Property<string>("CargoRecevingCondition");

                    b.Property<string>("ClearingAgentCNIC");

                    b.Property<long?>("ClearingAgentExportId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DriverCNIC");

                    b.Property<string>("DriverName");

                    b.Property<DateTime?>("GateInDateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("LoadingProgramId");

                    b.Property<int?>("NumberOfPackagesReceived");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("RecevingEndTime");

                    b.Property<DateTime?>("RecevingStartTime");

                    b.Property<string>("TruckNumber");

                    b.Property<double?>("WeightDeclaredByDriver");

                    b.HasKey("CargoReceivedId");

                    b.HasIndex("ClearingAgentExportId");

                    b.HasIndex("LoadingProgramId");

                    b.ToTable("CargoReceived");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CargoRollOver", b =>
                {
                    b.Property<long>("CargoRollOverId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("VesselExportId");

                    b.Property<long?>("VoyageExportId");

                    b.HasKey("CargoRollOverId");

                    b.HasIndex("VesselExportId");

                    b.HasIndex("VoyageExportId");

                    b.ToTable("CargoRollOvers");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CCMO", b =>
                {
                    b.Property<long>("CCMOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNo");

                    b.Property<string>("BondedCarrierId");

                    b.Property<string>("BondedCarrierName");

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<int?>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<double?>("NoOfPackages");

                    b.Property<string>("OpType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequenceNo");

                    b.Property<string>("TPNo");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNo");

                    b.Property<string>("VehicleNo");

                    b.HasKey("CCMOId");

                    b.ToTable("CCMO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CFSWeight", b =>
                {
                    b.Property<long>("CFSWeightId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CHR_NO");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("GROSS_WEIGHT");

                    b.Property<string>("IGM_NO");

                    b.Property<long?>("INDEX_NO");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("NET_WEIGHT");

                    b.Property<long?>("PALLET_WEIGHT");

                    b.Property<string>("SNO");

                    b.Property<long?>("TOTAL_WEIGHT");

                    b.Property<DateTime?>("WEIGHT_DATE");

                    b.Property<string>("WEIGHT_STATUS");

                    b.HasKey("CFSWeightId");

                    b.ToTable("CFSWeight");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ChequeRecived", b =>
                {
                    b.Property<long>("ChequeRecivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long?>("BankId");

                    b.Property<DateTime>("ChequeDate");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Number");

                    b.Property<long?>("PartyId");

                    b.Property<string>("Type");

                    b.HasKey("ChequeRecivedId");

                    b.HasIndex("BankId");

                    b.HasIndex("PartyId");

                    b.ToTable("ChequeRecived");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ChequeRecivedExport", b =>
                {
                    b.Property<long>("ChequeRecivedExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long?>("BankId");

                    b.Property<DateTime>("ChequeDate");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("Number");

                    b.Property<long?>("PartyExportId");

                    b.Property<string>("Type");

                    b.HasKey("ChequeRecivedExportId");

                    b.HasIndex("BankId");

                    b.HasIndex("PartyExportId");

                    b.ToTable("ChequeRecivedExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ClearingAgent", b =>
                {
                    b.Property<long>("ClearingAgentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChallanNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LicenceNumber");

                    b.Property<string>("NTNNumber");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ClearingAgentId");

                    b.ToTable("ClearingAgent");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ClearingAgentExport", b =>
                {
                    b.Property<long>("ClearingAgentExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ChallanNumber");

                    b.Property<string>("ClearingAgentName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("EmailAddress");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("ClearingAgentExportId");

                    b.ToTable("ClearingAgentExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Commodity", b =>
                {
                    b.Property<long>("CommodityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommodityCode");

                    b.Property<string>("CommodityName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("HsCode");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("CommodityId");

                    b.ToTable("Commodity");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("CompanyEmail");

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FilePath");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("Status");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Consigne", b =>
                {
                    b.Property<long>("ConsigneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConsigneCode");

                    b.Property<string>("ConsigneNTN");

                    b.Property<string>("ConsigneName");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("STRegistrationNo");

                    b.HasKey("ConsigneId");

                    b.ToTable("Consigne");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ContainerAssociation", b =>
                {
                    b.Property<long>("ContainerAssociationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AssociationDate");

                    b.Property<string>("ConsolidationStatus");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("NumberofPackages");

                    b.Property<string>("ShippingLineCode");

                    b.Property<string>("ShippingLineNTN");

                    b.Property<string>("ShippingLineName");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("ContainerAssociationId");

                    b.ToTable("ContainerAssociations");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ContainerIndex", b =>
                {
                    b.Property<long>("ContainerIndexId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdditionalFreeDays");

                    b.Property<string>("AuctionLotNo");

                    b.Property<long>("AuctionLotNoSequence");

                    b.Property<double?>("BLGrossWeight");

                    b.Property<string>("BLNo");

                    b.Property<double>("CBM");

                    b.Property<DateTime?>("CFSContainerGateInDate");

                    b.Property<DateTime?>("CFSContainerGateOutDate");

                    b.Property<string>("CargoType");

                    b.Property<long?>("ConsigneId");

                    b.Property<string>("ConsigneeNTN");

                    b.Property<string>("ConsigneeName");

                    b.Property<double?>("ContainerGrossWeight");

                    b.Property<string>("ContainerLocation");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("DeliveryDate");

                    b.Property<string>("Description");

                    b.Property<double>("ExaminationRequestCBM");

                    b.Property<double>("FFCBM");

                    b.Property<double?>("FoundWeight");

                    b.Property<long?>("GoodsHeadId");

                    b.Property<string>("ISOCode");

                    b.Property<int?>("IndexNo");

                    b.Property<bool>("InvoiceLocked");

                    b.Property<bool>("IsAuction");

                    b.Property<bool>("IsDGCargo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDelivered");

                    b.Property<bool>("IsDestuffed");

                    b.Property<bool?>("IsEmptyGateOut");

                    b.Property<bool>("IsEmptyOut");

                    b.Property<bool>("IsGateIn");

                    b.Property<bool>("IsGateOut");

                    b.Property<bool>("IsGrounded");

                    b.Property<bool>("IsHold");

                    b.Property<bool?>("IsPartialContainer");

                    b.Property<bool>("IsWeighed");

                    b.Property<string>("ManifestedSealNumber");

                    b.Property<double>("ManifestedWeight");

                    b.Property<string>("MarksAndNumber");

                    b.Property<double>("MeasurementCBM");

                    b.Property<int>("NoOfPackages");

                    b.Property<long?>("OrderDetailGatePassId");

                    b.Property<double>("OtherCharges");

                    b.Property<string>("PackageType");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<string>("RO");

                    b.Property<long?>("ShipperId");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<string>("ShippingLine");

                    b.Property<long?>("ShippingLineId");

                    b.Property<int>("Size");

                    b.Property<string>("Status");

                    b.Property<long?>("TransporterId");

                    b.Property<string>("VirNo");

                    b.Property<long?>("VoyageId");

                    b.HasKey("ContainerIndexId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("GoodsHeadId");

                    b.HasIndex("OrderDetailGatePassId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("ShippingLineId");

                    b.HasIndex("TransporterId");

                    b.HasIndex("VoyageId");

                    b.ToTable("ContainerIndex");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ContainerIndexTariff", b =>
                {
                    b.Property<long>("ContainerIndexTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("TariffId");

                    b.HasKey("ContainerIndexTariffId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ContainerIndexId");

                    b.HasIndex("TariffId");

                    b.ToTable("ContainerIndexTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ContainerSizeAmount", b =>
                {
                    b.Property<long>("ContainerSizeAmountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountSize20");

                    b.Property<double>("AmountSize40");

                    b.Property<double>("AmountSize45");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("ContainerSizeAmountId");

                    b.ToTable("ContainerSizeAmounts");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ContainerWeight", b =>
                {
                    b.Property<long>("ContainerWeightId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CHR_NO");

                    b.Property<string>("CONTAINER_NO");

                    b.Property<long?>("CONTAINER_WEIGHT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("EMPTY_CONTAINER_WEIGHT");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("TRUCK_NO");

                    b.Property<string>("USER_NAME");

                    b.Property<long?>("VEHICLE_WEIGHT");

                    b.Property<DateTime?>("WEIGHT_DATE");

                    b.HasKey("ContainerWeightId");

                    b.ToTable("ContainerWeight");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CreditAllowed", b =>
                {
                    b.Property<long>("CreditAllowedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<long>("CreditAllowedRs");

                    b.Property<long>("CreditDays");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("IndexNumber");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsRefound");

                    b.Property<bool>("IsSettled");

                    b.Property<string>("Remarks");

                    b.Property<string>("VirNumber");

                    b.HasKey("CreditAllowedId");

                    b.ToTable("CreditAllowed");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CreditAllowRefoundSettlement", b =>
                {
                    b.Property<long>("CreditAllowRefoundSettlementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AICTAccountNumber");

                    b.Property<long?>("BankId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("InoviceNo");

                    b.Property<long>("InsturmentNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("KnockOffAmount");

                    b.Property<string>("KnockOffInvoiceNo");

                    b.Property<string>("NatureOfAmount");

                    b.Property<string>("PaymentFor");

                    b.Property<long>("ReceivedAmount");

                    b.HasKey("CreditAllowRefoundSettlementId");

                    b.HasIndex("BankId");

                    b.ToTable("CreditAllowRefoundSettlement");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CreditToCustomer", b =>
                {
                    b.Property<long>("CreditToCustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorizedBy");

                    b.Property<int>("AuthorizedDays");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("EnteringCargoId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("CreditToCustomerId");

                    b.HasIndex("EnteringCargoId");

                    b.ToTable("CreditToCustomer");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CRL", b =>
                {
                    b.Property<long>("CRLId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DocumentCodes");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("CRLId");

                    b.ToTable("CRL");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CRLO", b =>
                {
                    b.Property<long>("CRLOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<string>("Category");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DocumentCodes");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<int?>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("ReleaseReference");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("CRLOId");

                    b.ToTable("CRLO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CustomerNOC", b =>
                {
                    b.Property<long>("CustomerNOCId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("EmailReceived");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NameOfPerson");

                    b.Property<long?>("ShippingAgentExportBId");

                    b.Property<long?>("ShippingAgentExportId");

                    b.HasKey("CustomerNOCId");

                    b.HasIndex("ShippingAgentExportBId");

                    b.ToTable("CustomerNOC");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CYContainer", b =>
                {
                    b.Property<long>("CYContainerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdditionalFreeDays");

                    b.Property<double?>("AmountSize20");

                    b.Property<double?>("AmountSize40");

                    b.Property<double?>("AmountSize45");

                    b.Property<string>("AuctionLotNo");

                    b.Property<long>("AuctionLotNoSequence");

                    b.Property<double?>("BLGrossWeight");

                    b.Property<string>("BLNo");

                    b.Property<string>("BerthAt");

                    b.Property<DateTime?>("BerthOn");

                    b.Property<double?>("CBM");

                    b.Property<DateTime?>("CYContainerGateInDate");

                    b.Property<string>("CargoType");

                    b.Property<long?>("ConsigneId");

                    b.Property<string>("ConsigneeNTN");

                    b.Property<string>("ConsigneeName");

                    b.Property<double?>("ContainerGrossWeight");

                    b.Property<string>("ContainerLocation");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("DeliveryDate");

                    b.Property<string>("Description");

                    b.Property<long?>("GoodsHeadId");

                    b.Property<string>("IGMYear");

                    b.Property<string>("ISOCode");

                    b.Property<int?>("IndexNo");

                    b.Property<bool?>("InvoiceLocked");

                    b.Property<bool?>("IsAuction");

                    b.Property<bool?>("IsCrossStuffed");

                    b.Property<bool>("IsDGCargo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDelivered");

                    b.Property<bool?>("IsDestuffed");

                    b.Property<bool?>("IsGateIn");

                    b.Property<bool?>("IsGateOut");

                    b.Property<bool?>("IsGrounded");

                    b.Property<bool?>("IsHold");

                    b.Property<bool?>("IsPartialContainer");

                    b.Property<bool?>("IsWeighed");

                    b.Property<bool?>("IsWeigment");

                    b.Property<string>("ManifestedSealNumber");

                    b.Property<string>("MarksAndNumber");

                    b.Property<int>("NoOfPackages");

                    b.Property<long?>("OrderDetailGatePassId");

                    b.Property<double?>("OtherCharges");

                    b.Property<string>("PackageType");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<string>("RO");

                    b.Property<long?>("ShipperId");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<string>("ShippingLine");

                    b.Property<long?>("ShippingLineId");

                    b.Property<int>("Size");

                    b.Property<string>("Status");

                    b.Property<long?>("TransporterId");

                    b.Property<string>("VIRNo");

                    b.Property<string>("VesselName");

                    b.Property<string>("VoyageNo");

                    b.HasKey("CYContainerId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("GoodsHeadId");

                    b.HasIndex("OrderDetailGatePassId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("ShippingLineId");

                    b.HasIndex("TransporterId");

                    b.ToTable("CYContainer");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DeliveredYard", b =>
                {
                    b.Property<long>("DeliveredYardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeliveredYardName");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("DeliveredYardId");

                    b.ToTable("DeliveredYard");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DeliveryOrder", b =>
                {
                    b.Property<long>("DeliveryOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<long>("DONumber");

                    b.Property<DateTime?>("Date");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("DeliveryOrderId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("DeliveryOrder");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DestuffedContainer", b =>
                {
                    b.Property<long>("DestuffedContainerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("CBM");

                    b.Property<string>("ConsigneeName");

                    b.Property<long>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<string>("FoundPackageType");

                    b.Property<double?>("FoundWeight");

                    b.Property<int>("Index");

                    b.Property<string>("InvoiceFound");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.Property<int?>("ManifestQuantity");

                    b.Property<int?>("ManifestWeight");

                    b.Property<string>("MarksAndNumber");

                    b.Property<int?>("PackageQuantity");

                    b.Property<string>("PackageType");

                    b.Property<string>("Remarks");

                    b.Property<string>("ShortExcess");

                    b.Property<string>("ShortExcessRemarks");

                    b.Property<long?>("TellySheetId");

                    b.HasKey("DestuffedContainerId");

                    b.HasIndex("ContainerIndexId")
                        .IsUnique();

                    b.HasIndex("TellySheetId");

                    b.ToTable("DestuffedContainer");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Dictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GatePassNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Key");

                    b.Property<string>("MonthYear");

                    b.Property<string>("TRNumber");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Dictionary");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DisabledAgentTariff", b =>
                {
                    b.Property<long>("DisabledAgentTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ShippingAgentTariffId");

                    b.HasKey("DisabledAgentTariffId");

                    b.HasIndex("ContainerIndexId");

                    b.HasIndex("ShippingAgentTariffId");

                    b.ToTable("DisabledAgentTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DisabledAgentTariffCY", b =>
                {
                    b.Property<long>("DisabledAgentTariffCYId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CYContainerId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ShippingAgentTariffId");

                    b.HasKey("DisabledAgentTariffCYId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ShippingAgentTariffId");

                    b.ToTable("DisabledAgentTariffCY");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DisabledAgentTariffExport", b =>
                {
                    b.Property<long>("DisabledAgentTariffExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("EnteringCargoId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ShippingAgentTariffExportId");

                    b.HasKey("DisabledAgentTariffExportId");

                    b.HasIndex("EnteringCargoId");

                    b.HasIndex("ShippingAgentTariffExportId");

                    b.ToTable("DisabledAgentTariffExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DOCodeItem", b =>
                {
                    b.Property<long>("DOCodeItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("DeliveryOrderId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.HasKey("DOCodeItemId");

                    b.HasIndex("DeliveryOrderId");

                    b.ToTable("DOCodeItem");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DocumentCode", b =>
                {
                    b.Property<long>("DocumentCodeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DocumentName");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("DocumentCodeId");

                    b.ToTable("DocumentCode");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DOItem", b =>
                {
                    b.Property<long>("DOItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("GatePassAuctionId");

                    b.Property<long?>("GatePassExportId");

                    b.Property<long?>("GatePassId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsGateOut");

                    b.Property<int>("NoOfPackages");

                    b.Property<string>("PackageType");

                    b.Property<double>("Quantity");

                    b.Property<string>("Status");

                    b.Property<string>("TruckNumber");

                    b.HasKey("DOItemId");

                    b.HasIndex("GatePassAuctionId");

                    b.HasIndex("GatePassExportId");

                    b.HasIndex("GatePassId");

                    b.ToTable("DOItem");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DOItemExport", b =>
                {
                    b.Property<long>("DOItemExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("GatePassExportId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("NumberOfPackage");

                    b.Property<string>("PackageType");

                    b.Property<string>("Status");

                    b.Property<string>("TruckNumber");

                    b.HasKey("DOItemExportId");

                    b.HasIndex("GatePassExportId");

                    b.ToTable("DOItemExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ECM", b =>
                {
                    b.Property<long>("ECMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Remarks");

                    b.Property<string>("ServiceStatus");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("ECMId");

                    b.ToTable("ECM");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ECMO", b =>
                {
                    b.Property<long>("ECMOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("HandlingCode");

                    b.Property<int?>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Remarks");

                    b.Property<string>("ServiceStatus");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("ECMOId");

                    b.ToTable("ECMO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDI_Maersk_APIResponse", b =>
                {
                    b.Property<long>("EDI_Maersk_APIResponseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("code");

                    b.Property<string>("eventTransactionId");

                    b.Property<string>("message");

                    b.Property<long>("messageId");

                    b.Property<DateTime>("timestamp");

                    b.HasKey("EDI_Maersk_APIResponseId");

                    b.ToTable("EDI_Maersk_APIResponse");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDI_Maersk_Lookup", b =>
                {
                    b.Property<long>("EDI_Maersk_LookupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CopyToMearskEnabled");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifyPoint");

                    b.HasKey("EDI_Maersk_LookupId");

                    b.ToTable("EDI_Maersk_Lookup");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDI_Maersk_Message", b =>
                {
                    b.Property<long>("EDI_Maersk_MessageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BL_GROSS_WEIGHT");

                    b.Property<string>("BL_NO");

                    b.Property<string>("CARRIER_ID");

                    b.Property<string>("CN_ISO_CODE");

                    b.Property<long?>("CONTAINER_COUNT");

                    b.Property<string>("CONTAINER_HISTORY_DATE");

                    b.Property<long?>("CONTAINER_ID");

                    b.Property<string>("CONTAINER_LINE_CODE");

                    b.Property<string>("CONTAINER_NO");

                    b.Property<string>("CONTAINER_STATUS");

                    b.Property<string>("CONTAINER_TYPE");

                    b.Property<string>("DESTUFF_DATE");

                    b.Property<string>("EVENT_ID");

                    b.Property<string>("GATE_IN_DATE");

                    b.Property<string>("GATE_OUT_DATE");

                    b.Property<bool?>("IS_MARSK");

                    b.Property<bool?>("IS_PROCESSED");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MAERSKPARTNERID");

                    b.Property<string>("MAN_SEAL_NO");

                    b.Property<string>("MESSAGE_SEND_DATETIME");

                    b.Property<string>("PROCESSING_COMMENTS");

                    b.Property<string>("REMARKS");

                    b.Property<long?>("SEGMENT_NO");

                    b.Property<string>("SEQUENCE_NO");

                    b.Property<long?>("SHIPPING_LINE_ID");

                    b.Property<string>("TRUCK_NO");

                    b.Property<string>("VESSEL_CALL_SIGN");

                    b.Property<string>("VESSEL_CODE");

                    b.Property<string>("VOYAGE_NO");

                    b.HasKey("EDI_Maersk_MessageId");

                    b.ToTable("EDI_Maersk_Message");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDI_Tradelens_APIResponse", b =>
                {
                    b.Property<long>("EDI_Tradelens_APIResponseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("code");

                    b.Property<string>("eventTransactionId");

                    b.Property<string>("message");

                    b.Property<long>("messageId");

                    b.Property<DateTime>("timestamp");

                    b.HasKey("EDI_Tradelens_APIResponseId");

                    b.ToTable("EDI_Tradelens_APIResponse");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDI_Tradelens_Lookup", b =>
                {
                    b.Property<long>("EDI_Tradelens_LookupId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CopyToMearskEnabled");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ModifyPoint");

                    b.HasKey("EDI_Tradelens_LookupId");

                    b.ToTable("EDI_Tradelens_Lookup");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDI_Tradelens_Message", b =>
                {
                    b.Property<long>("EDI_Tradelens_MessageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BL_GROSS_WEIGHT");

                    b.Property<string>("BL_NO");

                    b.Property<string>("CARRIER_ID");

                    b.Property<string>("CN_ISO_CODE");

                    b.Property<long?>("CONTAINER_COUNT");

                    b.Property<string>("CONTAINER_HISTORY_DATE");

                    b.Property<long?>("CONTAINER_ID");

                    b.Property<string>("CONTAINER_LINE_CODE");

                    b.Property<string>("CONTAINER_NO");

                    b.Property<string>("CONTAINER_STATUS");

                    b.Property<string>("CONTAINER_TYPE");

                    b.Property<string>("DESTUFF_DATE");

                    b.Property<string>("EVENT_ID");

                    b.Property<string>("GATE_IN_DATE");

                    b.Property<string>("GATE_OUT_DATE");

                    b.Property<bool?>("IS_MARSK");

                    b.Property<bool?>("IS_PROCESSED");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MAERSKPARTNERID");

                    b.Property<string>("MAN_SEAL_NO");

                    b.Property<string>("MESSAGE_SEND_DATETIME");

                    b.Property<string>("PROCESSING_COMMENTS");

                    b.Property<string>("REMARKS");

                    b.Property<long?>("SEGMENT_NO");

                    b.Property<string>("SEQUENCE_NO");

                    b.Property<long?>("SHIPPING_LINE_ID");

                    b.Property<string>("TRUCK_NO");

                    b.Property<string>("VESSEL_CALL_SIGN");

                    b.Property<string>("VESSEL_CODE");

                    b.Property<string>("VOYAGE_NO");

                    b.HasKey("EDI_Tradelens_MessageId");

                    b.ToTable("EDI_Tradelens_Message");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDIMaerskMessageTOS", b =>
                {
                    b.Property<long>("EDIMaerskMessageTOSId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("BL_GROSS_WEIGHT");

                    b.Property<string>("BL_NO");

                    b.Property<string>("CARRIER_ID");

                    b.Property<string>("CN_ISO_CODE");

                    b.Property<long?>("CONTAINER_COUNT");

                    b.Property<string>("CONTAINER_HISTORY_DATE");

                    b.Property<long?>("CONTAINER_ID");

                    b.Property<string>("CONTAINER_LINE_CODE");

                    b.Property<string>("CONTAINER_NO");

                    b.Property<string>("CONTAINER_STATUS");

                    b.Property<string>("CONTAINER_TYPE");

                    b.Property<string>("DESTUFF_DATE");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("EVENT_ID");

                    b.Property<string>("GATE_IN_DATE");

                    b.Property<string>("GATE_OUT_DATE");

                    b.Property<bool?>("IS_MARSK");

                    b.Property<bool?>("IS_PROCESSED");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MAERSKPARTNERID");

                    b.Property<string>("MAN_SEAL_NO");

                    b.Property<string>("MESSAGE_SEND_DATETIME");

                    b.Property<string>("PROCESSING_COMMENTS");

                    b.Property<string>("REMARKS");

                    b.Property<long?>("SEGMENT_NO");

                    b.Property<string>("SEQUENCE_NO");

                    b.Property<long?>("SHIPPING_LINE_ID");

                    b.Property<string>("TRUCK_NO");

                    b.Property<string>("VESSEL_CALL_SIGN");

                    b.Property<string>("VESSEL_CODE");

                    b.Property<string>("VOYAGE_NO");

                    b.HasKey("EDIMaerskMessageTOSId");

                    b.ToTable("EDIMaerskMessageTOS");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EdiMessage", b =>
                {
                    b.Property<long>("EdiMessageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("Exception");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("EdiMessageId");

                    b.ToTable("EdiMessages");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDOHold", b =>
                {
                    b.Property<long>("EDOHoldId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEDOHold");

                    b.Property<string>("Remarks");

                    b.HasKey("EDOHoldId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("EDOHold");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EHC", b =>
                {
                    b.Property<long>("EHCId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("ExecutionOrder");

                    b.Property<string>("FileName");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.HasKey("EHCId");

                    b.ToTable("EHCs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ElectronicDeliveryOrder", b =>
                {
                    b.Property<long>("ElectronicDeliveryOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Agent_Name");

                    b.Property<string>("AgentsChalNo");

                    b.Property<string>("BL_No");

                    b.Property<string>("CONT_Size");

                    b.Property<string>("ConsigneeAddress");

                    b.Property<string>("ConsigneeNTN");

                    b.Property<string>("ConsigneeName");

                    b.Property<string>("Container_No");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("Do_Date");

                    b.Property<string>("Doc_Tran_No");

                    b.Property<string>("FileName");

                    b.Property<string>("Goods_Desc");

                    b.Property<double>("Gross_Weight");

                    b.Property<string>("IGM_No");

                    b.Property<string>("Index_No");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Marks_No");

                    b.Property<double>("NetWeight");

                    b.Property<string>("No_Of_Pkgs");

                    b.Property<string>("OpType");

                    b.Property<bool>("Oracle");

                    b.Property<string>("PKg_Description");

                    b.Property<string>("PackagesUnit");

                    b.Property<DateTime?>("PerformedDate");

                    b.Property<string>("Performedby");

                    b.Property<string>("Port_of_Arrival");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Ref_No");

                    b.Property<string>("ShippingLineCode");

                    b.Property<int?>("TotalRecords");

                    b.Property<DateTime?>("Valid_Date");

                    b.Property<string>("Vessel_Name");

                    b.Property<string>("Voyage");

                    b.HasKey("ElectronicDeliveryOrderId");

                    b.ToTable("ElectronicDeliveryOrder");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerDelivered", b =>
                {
                    b.Property<long>("EmptyContainerDeliveredId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ConsigneId");

                    b.Property<DateTime?>("DelDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("EmptyContainerReceivedId");

                    b.Property<string>("ExportBookingNo");

                    b.Property<string>("ExportVessel");

                    b.Property<string>("FinalDestination");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("OffHireLocationId");

                    b.Property<string>("PortOfDischarge");

                    b.Property<long?>("RandDClerkId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Shift");

                    b.Property<long?>("ShipperId");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<long?>("ShippingLineId");

                    b.Property<string>("TruckNo");

                    b.HasKey("EmptyContainerDeliveredId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("EmptyContainerReceivedId");

                    b.HasIndex("OffHireLocationId");

                    b.HasIndex("RandDClerkId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("ShippingLineId");

                    b.ToTable("EmptyContainerDelivered");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerDeliveryOrder", b =>
                {
                    b.Property<long>("EmptyContainerDeliveryOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DONumber");

                    b.Property<DateTime?>("Date");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("EmptyContainerReceivedId");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<DateTime?>("ValidTo");

                    b.HasKey("EmptyContainerDeliveryOrderId");

                    b.HasIndex("EmptyContainerReceivedId");

                    b.ToTable("EmptyContainerDeliveryOrder");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerGatePass", b =>
                {
                    b.Property<long>("EmptyContainerGatePassId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerCondition");

                    b.Property<long>("ContainerIndexId");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ShiftedYard");

                    b.HasKey("EmptyContainerGatePassId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("EmptyContainerGatePass");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerInvoice", b =>
                {
                    b.Property<long>("EmptyContainerInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AfterSalesTax");

                    b.Property<DateTime?>("ArrivalDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("EmptyContainerReceivedId");

                    b.Property<double>("GrandTotal");

                    b.Property<DateTime?>("InvoiceDate");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("SalesTax");

                    b.Property<int>("Size");

                    b.Property<int>("StorageDays");

                    b.Property<double>("TotalCharges");

                    b.Property<string>("Year");

                    b.HasKey("EmptyContainerInvoiceId");

                    b.HasIndex("EmptyContainerReceivedId");

                    b.ToTable("EmptyContainerInvoice");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerInvoiceItem", b =>
                {
                    b.Property<long>("EmptyContainerInvoiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<long>("EmptyContainerInvoiceId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Type");

                    b.HasKey("EmptyContainerInvoiceItemId");

                    b.HasIndex("EmptyContainerInvoiceId");

                    b.ToTable("EmptyContainerInvoiceItem");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerReceived", b =>
                {
                    b.Property<long>("EmptyContainerReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActualArrive");

                    b.Property<DateTime?>("ArrivedFrom");

                    b.Property<long?>("ClearingAgentId");

                    b.Property<long?>("ConsigneId");

                    b.Property<string>("ContainerNo");

                    b.Property<string>("DamageType");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GatePassNo");

                    b.Property<string>("GuranteeNo");

                    b.Property<long?>("ISOCodeHeadId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEmptyGateOut");

                    b.Property<bool>("IsEmptyOut");

                    b.Property<bool>("IsEmptyReceived");

                    b.Property<string>("PickLocation");

                    b.Property<string>("Remarks");

                    b.Property<string>("Shift");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<long?>("ShippingLineId");

                    b.Property<string>("Size");

                    b.Property<long?>("TransporterId");

                    b.Property<string>("TruckNo");

                    b.Property<string>("Vessel");

                    b.Property<string>("Voyage");

                    b.HasKey("EmptyContainerReceivedId");

                    b.HasIndex("ClearingAgentId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("ISOCodeHeadId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("ShippingLineId");

                    b.HasIndex("TransporterId");

                    b.ToTable("EmptyContainerReceived");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerStorageSlab", b =>
                {
                    b.Property<long>("EmptyContainerStorageSlabId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<long>("EmptyContainerTariffId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NoOfDays");

                    b.Property<int>("Rate20");

                    b.Property<int>("Rate40");

                    b.Property<int>("Rate45");

                    b.HasKey("EmptyContainerStorageSlabId");

                    b.HasIndex("EmptyContainerTariffId");

                    b.ToTable("EmptyContainerStorageSlab");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerTariff", b =>
                {
                    b.Property<long>("EmptyContainerTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("EmptyContainerTariffName");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Rate20");

                    b.Property<int>("Rate40");

                    b.Property<int>("Rate45");

                    b.Property<long>("ShippingAgentId");

                    b.HasKey("EmptyContainerTariffId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("EmptyContainerTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerTaxAndFreeDay", b =>
                {
                    b.Property<long>("EmptyContainerTaxAndFreeDayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("FreeDays");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("SalesTax");

                    b.Property<long>("ShippingAgentId");

                    b.HasKey("EmptyContainerTaxAndFreeDayId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("EmptyContainerTaxAndFreeDay");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyGateOutContainer", b =>
                {
                    b.Property<long>("EmptyGateOutContainerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerCondition");

                    b.Property<long>("ContainerIndexId");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DeliveredYard");

                    b.Property<DateTime?>("DeliveredYardDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<string>("ShippingLine");

                    b.Property<long?>("TransporterId");

                    b.Property<string>("VehicleNumber");

                    b.Property<string>("VirNo");

                    b.HasKey("EmptyGateOutContainerId");

                    b.HasIndex("ContainerIndexId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("TransporterId");

                    b.ToTable("EmptyGateOutContainer");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyReceiving", b =>
                {
                    b.Property<long>("EmptyReceivingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CRONumber");

                    b.Property<string>("ContainerCondition");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("ContainerSize");

                    b.Property<double?>("ContainerTareWeight");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("RecevingDate");

                    b.Property<long?>("ShippingAgentExportId");

                    b.Property<long?>("ShippingLineId");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("EmptyReceivingId");

                    b.HasIndex("ShippingAgentExportId");

                    b.HasIndex("ShippingLineId");

                    b.ToTable("EmptyReceiving");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EnteringCargo", b =>
                {
                    b.Property<long>("EnteringCargoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ANFDate");

                    b.Property<string>("ANFStatus");

                    b.Property<int>("AdditionalFreeDays");

                    b.Property<string>("ApprovedBy");

                    b.Property<string>("ChallanNumber");

                    b.Property<long?>("ClearingAgentExportId");

                    b.Property<string>("ClearingAgentName");

                    b.Property<string>("ConsigneeName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("ExtraFreeDaysRemarks");

                    b.Property<string>("GDNumber");

                    b.Property<string>("GateInStatus");

                    b.Property<double>("GrossWeight");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsHold");

                    b.Property<DateTime?>("IssueDate");

                    b.Property<string>("Key");

                    b.Property<long?>("LoadingProgramId");

                    b.Property<string>("LoadingProgramNumber");

                    b.Property<int?>("NumberOfPackages");

                    b.Property<DateTime?>("OPIAReceiveTime");

                    b.Property<string>("PackageType");

                    b.Property<string>("PaperReady");

                    b.Property<DateTime?>("PaperReadyDate");

                    b.Property<string>("Remarks");

                    b.Property<string>("ShipperName");

                    b.Property<string>("TRNumber");

                    b.Property<long>("WaiverAmount");

                    b.Property<bool?>("isGateIn");

                    b.Property<bool?>("isGrounded");

                    b.HasKey("EnteringCargoId");

                    b.HasIndex("ClearingAgentExportId");

                    b.HasIndex("LoadingProgramId");

                    b.ToTable("EnteringCargo");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationCharge", b =>
                {
                    b.Property<long>("ExaminationChargeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double>("ExaminationChargeAmount20");

                    b.Property<double>("ExaminationChargeAmount40");

                    b.Property<double>("ExaminationChargeAmount45");

                    b.Property<string>("ExaminationChargeName");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("ExaminationChargeId");

                    b.ToTable("ExaminationCharge");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationChargeAssign", b =>
                {
                    b.Property<long>("ExaminationChargeAssignId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CYContainerId");

                    b.Property<double>("ChargeAmount20");

                    b.Property<double>("ChargeAmount40");

                    b.Property<double>("ChargeAmount45");

                    b.Property<string>("ChargeName");

                    b.Property<double>("ChargeQuantity");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.HasKey("ExaminationChargeAssignId");

                    b.HasIndex("CYContainerId");

                    b.ToTable("ExaminationChargeAssign");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationRequest", b =>
                {
                    b.Property<long>("ExaminationRequestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BECashNo");

                    b.Property<string>("CNIC");

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ClearingAgentId");

                    b.Property<string>("ClearingAgentRep");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("CustomOutChargeDate");

                    b.Property<DateTime>("CustomRegDate");

                    b.Property<string>("CustomRegNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double>("ExaminationRequestCBM");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LineDoNumber");

                    b.Property<string>("PhoneNumber");

                    b.Property<DateTime>("PresentationDate");

                    b.HasKey("ExaminationRequestId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ClearingAgentId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("ExaminationRequest");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationTariff", b =>
                {
                    b.Property<long>("ExaminationTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CBMRate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int>("DevededIndexAmount");

                    b.Property<long?>("ExaminationChargeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("PerIndexRate");

                    b.Property<int>("Rate20");

                    b.Property<int>("Rate40");

                    b.Property<int>("Rate45");

                    b.Property<int>("WeightRate");

                    b.HasKey("ExaminationTariffId");

                    b.HasIndex("ExaminationChargeId");

                    b.ToTable("ExaminationTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationTariffInformation", b =>
                {
                    b.Property<long>("ExaminationTariffInformationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("ExaminationType");

                    b.Property<long?>("GoodsHeadId");

                    b.Property<string>("IndexCargoType");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ShippingAgentId");

                    b.HasKey("ExaminationTariffInformationId");

                    b.HasIndex("GoodsHeadId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("ExaminationTariffInformation");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationTariffInformationTariff", b =>
                {
                    b.Property<long>("ExaminationTariffInformationTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("ExaminationTariffId");

                    b.Property<long>("ExaminationTariffInformationId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("ExaminationTariffInformationTariffId");

                    b.HasIndex("ExaminationTariffId");

                    b.HasIndex("ExaminationTariffInformationId");

                    b.ToTable("ExaminationTariffInformationTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExcessAmountRefundSettlement", b =>
                {
                    b.Property<long>("ExcessAmountRefundSettlementId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AICTServiceCharges");

                    b.Property<long>("Amount");

                    b.Property<long?>("BankId");

                    b.Property<DateTime?>("ChequeDate");

                    b.Property<string>("ChequeNumber");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("InFavorof");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("OnllineAccountAmount");

                    b.Property<string>("OnllineAccountNumber");

                    b.Property<string>("OnllineAccountTitle");

                    b.Property<long>("RefoundAmount");

                    b.Property<string>("Type");

                    b.HasKey("ExcessAmountRefundSettlementId");

                    b.HasIndex("BankId");

                    b.ToTable("ExcessAmountRefundSettlement");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExchangeRate", b =>
                {
                    b.Property<long>("ExchangeRateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("ExchangeRateAmount");

                    b.Property<bool>("IsDeleted");

                    b.Property<double>("RateAmount20");

                    b.Property<double>("RateAmount40");

                    b.Property<double>("RateAmount45");

                    b.HasKey("ExchangeRateId");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportBRT", b =>
                {
                    b.Property<long>("ExportBRTId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("ExportCargoId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.HasKey("ExportBRTId");

                    b.HasIndex("ExportCargoId");

                    b.ToTable("ExportBRT");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportCargo", b =>
                {
                    b.Property<long>("ExportCargoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("LoadingProgramId");

                    b.Property<string>("ShipperSeal");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("ExportCargoId");

                    b.HasIndex("LoadingProgramId")
                        .IsUnique()
                        .HasFilter("[LoadingProgramId] IS NOT NULL");

                    b.ToTable("ExportCargo");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportContainer", b =>
                {
                    b.Property<long>("ExportContainerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CRONumber");

                    b.Property<string>("ClearingAgentName");

                    b.Property<bool?>("ContainerAssociated");

                    b.Property<string>("ContainerCondition");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("ContainerSize");

                    b.Property<double?>("ContainerTareWeight");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool?>("ExaminationArranged");

                    b.Property<string>("GDNumber");

                    b.Property<string>("GatePassNumber");

                    b.Property<int?>("GrossWeight");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsGateout");

                    b.Property<DateTime?>("IssueDate");

                    b.Property<int?>("NumberofPackages");

                    b.Property<string>("POD");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("RecevingDate");

                    b.Property<long?>("ShippingAgentExportId");

                    b.Property<long?>("ShippingLineExportId");

                    b.Property<long?>("ShippingLineId");

                    b.Property<string>("Status");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("ExportContainerId");

                    b.HasIndex("ShippingAgentExportId");

                    b.HasIndex("ShippingLineExportId");

                    b.HasIndex("ShippingLineId");

                    b.ToTable("ExportContainers");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportContainerItem", b =>
                {
                    b.Property<long>("ExportContainerItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowLoading");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Destination");

                    b.Property<long?>("ExportContainerId");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateOutDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsGateOut");

                    b.Property<bool>("IsOvams");

                    b.Property<bool>("IsSubmitted");

                    b.Property<bool?>("Ischecked");

                    b.Property<int?>("NumberOfPackages");

                    b.Property<long?>("OrderNumber");

                    b.Property<long?>("ShipperId");

                    b.Property<string>("ShipperName");

                    b.Property<DateTime?>("SubmitedDate");

                    b.Property<long?>("VesselExportId");

                    b.Property<long?>("VoyageExportId");

                    b.Property<string>("isAmountReceived");

                    b.HasKey("ExportContainerItemId");

                    b.HasIndex("ExportContainerId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("VesselExportId");

                    b.HasIndex("VoyageExportId");

                    b.ToTable("ExportContainerItem");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportDeliveryOrder", b =>
                {
                    b.Property<long>("ExportDeliveryOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DODate");

                    b.Property<long>("DONumber")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("EnteringCargoId");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeivered");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.HasKey("ExportDeliveryOrderId");

                    b.HasIndex("EnteringCargoId");

                    b.ToTable("ExportDeliveryOrders");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportGroundedCargo", b =>
                {
                    b.Property<long>("ExportGroundedCargoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("EnteringCargoId");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.Property<int?>("Weight");

                    b.HasKey("ExportGroundedCargoId");

                    b.HasIndex("EnteringCargoId")
                        .IsUnique()
                        .HasFilter("[EnteringCargoId] IS NOT NULL");

                    b.ToTable("ExportGroundedCargo");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportLocationCodeList", b =>
                {
                    b.Property<long>("ExportLocationCodeListId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode");

                    b.Property<string>("CountryName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PortCode");

                    b.Property<string>("PortName");

                    b.Property<string>("UNCODE");

                    b.HasKey("ExportLocationCodeListId");

                    b.ToTable("ExportLocationCodeLists");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportVehicle", b =>
                {
                    b.Property<long>("ExportVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("EnteringCargoId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ShipperSeal");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("ExportVehicleId");

                    b.HasIndex("EnteringCargoId");

                    b.ToTable("ExportVehicle");
                });

            modelBuilder.Entity("WebdocTerminal.Models.FailedFile", b =>
                {
                    b.Property<long>("FailedFileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Message");

                    b.HasKey("FailedFileId");

                    b.ToTable("FailedFile");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateIn", b =>
                {
                    b.Property<long>("GateInId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BerthAt");

                    b.Property<string>("CarrierId");

                    b.Property<string>("CarrierName");

                    b.Property<string>("ContainerNo");

                    b.Property<string>("ContainerSize");

                    b.Property<double?>("DPManifestWeight");

                    b.Property<double?>("DPTareweight");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FoundSealNumber");

                    b.Property<DateTime?>("GateInDateTime");

                    b.Property<string>("ISOCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MenifestedSealNo");

                    b.Property<string>("PACSSSealNo");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<string>("VIRNo");

                    b.Property<string>("VehicleNo");

                    b.Property<double?>("Weight");

                    b.HasKey("GateInId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("GateIn");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateInExport", b =>
                {
                    b.Property<long>("GateInExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateInDate");

                    b.Property<string>("GateInStatus");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("NumberofPackages");

                    b.Property<string>("PackageType");

                    b.Property<string>("VehicleNumber");

                    b.Property<double>("Weight");

                    b.HasKey("GateInExportId");

                    b.ToTable("GateInExports");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateOut", b =>
                {
                    b.Property<long>("GateOutId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("DeliverDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ShiftedYard");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<string>("TruckNo");

                    b.HasKey("GateOutId");

                    b.HasIndex("CYContainerId")
                        .IsUnique()
                        .HasFilter("[CYContainerId] IS NOT NULL");

                    b.HasIndex("ContainerIndexId")
                        .IsUnique()
                        .HasFilter("[ContainerIndexId] IS NOT NULL");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("GateOut");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateoutExport", b =>
                {
                    b.Property<long>("GateoutExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierNTN");

                    b.Property<double?>("ContainerGrossWeight");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("CountryofExit");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateoutTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LineSeal");

                    b.Property<string>("PCCSSSeal");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<string>("Status");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("GateoutExportId");

                    b.HasIndex("PortAndTerminalId");

                    b.ToTable("GateoutExports");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateOutGD", b =>
                {
                    b.Property<long>("GateOutGDId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateOutDateime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsGateOut");

                    b.Property<int?>("NumberOfPackages");

                    b.Property<string>("PackageType");

                    b.Property<string>("Status");

                    b.Property<string>("VehicleNumber");

                    b.Property<double?>("Weight");

                    b.HasKey("GateOutGDId");

                    b.ToTable("GateOutGDs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePass", b =>
                {
                    b.Property<long>("GatePassId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BalancePackages");

                    b.Property<string>("CargoType");

                    b.Property<DateTime?>("DODate");

                    b.Property<string>("DONumber");

                    b.Property<DateTime>("DOYear");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double>("Delivered");

                    b.Property<long>("DeliveryOrderId");

                    b.Property<DateTime?>("GatePassDate");

                    b.Property<string>("GatePassNumber");

                    b.Property<string>("GatePassType");

                    b.Property<string>("GatePasscontainerNumber");

                    b.Property<int>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("RandDClerkId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Shift");

                    b.Property<double>("TotalDelivered");

                    b.Property<double>("TotalPackages");

                    b.Property<string>("UnitType");

                    b.Property<string>("VirNumber");

                    b.HasKey("GatePassId");

                    b.HasIndex("DeliveryOrderId");

                    b.HasIndex("RandDClerkId");

                    b.ToTable("GatePass");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePassAuction", b =>
                {
                    b.Property<long>("GatePassAuctionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalancePackages");

                    b.Property<DateTime?>("BillDate");

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime?>("DODate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int?>("Delivered");

                    b.Property<DateTime?>("GatePassDate");

                    b.Property<string>("GatePassNumber");

                    b.Property<string>("ImportBillNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<int?>("TotalDelivered");

                    b.Property<int?>("TotalPackages");

                    b.Property<string>("UnitType");

                    b.HasKey("GatePassAuctionId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("GatePassAuction");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePassExport", b =>
                {
                    b.Property<long>("GatePassExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalancePackages");

                    b.Property<DateTime?>("DODate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int?>("Delivered");

                    b.Property<long>("ExportDeliveryOrderId");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GatePassDate");

                    b.Property<string>("GatePassNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<int?>("TotalDelivered");

                    b.Property<int?>("TotalPackages");

                    b.HasKey("GatePassExportId");

                    b.HasIndex("ExportDeliveryOrderId");

                    b.ToTable("GatePassExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePassSample", b =>
                {
                    b.Property<long>("GatePassSampleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentRepresentative");

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DetailOfSample");

                    b.Property<string>("ExaminedBy");

                    b.Property<DateTime>("ExaminedDate");

                    b.Property<DateTime>("GatePassDate");

                    b.Property<long>("GatePassNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ReceivedBy");

                    b.HasKey("GatePassSampleId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("GatePassSample");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePassWeightment", b =>
                {
                    b.Property<long>("GatePassWeightmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double?>("GrossWeight");

                    b.Property<int?>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<double?>("ManifestedWeight");

                    b.Property<string>("TruckNumber");

                    b.Property<string>("Virnumber");

                    b.HasKey("GatePassWeightmentId");

                    b.ToTable("GatePassWeightment");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDCR", b =>
                {
                    b.Property<long>("GDCRId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<string>("ContainerConsolidation");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("Flag1");

                    b.Property<string>("Flag2");

                    b.Property<string>("Flag3");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsContainerStuffed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsGateOut");

                    b.Property<bool>("IsProcessed");

                    b.Property<bool>("IsSubmit");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("NewContainerNumber");

                    b.Property<string>("OldContainerNumber");

                    b.Property<string>("OperationType");

                    b.Property<DateTime?>("Performed");

                    b.Property<string>("Status");

                    b.Property<string>("VirNumber");

                    b.HasKey("GDCRId");

                    b.ToTable("GDCR");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDE", b =>
                {
                    b.Property<long>("GDEId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClearingAgent");

                    b.Property<string>("ContainerMode");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DestinationCountry");

                    b.Property<string>("DestinationPort");

                    b.Property<string>("DocumentRequired");

                    b.Property<string>("ExporterAddress");

                    b.Property<string>("ExporterCityCode");

                    b.Property<string>("ExporterCountryCode");

                    b.Property<string>("ExporterNTN");

                    b.Property<string>("ExporterName");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<double>("GrossWeight");

                    b.Property<string>("HSCode");

                    b.Property<string>("HSCodeDescription");

                    b.Property<string>("ImporterAddress");

                    b.Property<string>("ImporterCityCode");

                    b.Property<string>("ImporterCountryCode");

                    b.Property<string>("ImporterName");

                    b.Property<bool>("IsDeleted");

                    b.Property<double>("NumberOfPackages");

                    b.Property<string>("OperationType");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("Performed");

                    b.Property<double>("Quantity");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("SL");

                    b.Property<string>("TelephoneNumber");

                    b.Property<string>("Terminal");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("UOM");

                    b.HasKey("GDEId");

                    b.ToTable("GDEs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDHold", b =>
                {
                    b.Property<long>("GDHoldId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("EnteringCargoId");

                    b.Property<DateTime?>("HoldDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.HasKey("GDHoldId");

                    b.HasIndex("EnteringCargoId")
                        .IsUnique()
                        .HasFilter("[EnteringCargoId] IS NOT NULL");

                    b.ToTable("GDHold");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDI", b =>
                {
                    b.Property<long>("GDIId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<string>("ClearingAgent");

                    b.Property<string>("ConsigneeNTN");

                    b.Property<string>("ConsigneeName");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DestCountry");

                    b.Property<string>("DestPort");

                    b.Property<double?>("DutyValue");

                    b.Property<string>("ExporterName");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("Performed");

                    b.Property<string>("PortOfShipment");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("ShipmentCountry");

                    b.Property<int?>("TotalRecord");

                    b.Property<string>("VIRNumber");

                    b.HasKey("GDIId");

                    b.ToTable("GDI");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDIO", b =>
                {
                    b.Property<long>("GDIOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<string>("CRN");

                    b.Property<string>("CargoType");

                    b.Property<string>("ClearingAgent");

                    b.Property<string>("ConsigneeNTN");

                    b.Property<string>("ConsigneeName");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DestinationCountry");

                    b.Property<string>("DestinationPort");

                    b.Property<double?>("DutyValue");

                    b.Property<string>("ExporterName");

                    b.Property<string>("FileName");

                    b.Property<int?>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<double?>("NoOfPackages");

                    b.Property<string>("OpType");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("Performed");

                    b.Property<string>("PortOfShipment");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("ShipmentCountry");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("GDIOId");

                    b.ToTable("GDIO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDTariff", b =>
                {
                    b.Property<long>("GDTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("EnteringCargoId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("TariffExportId");

                    b.HasKey("GDTariffId");

                    b.HasIndex("EnteringCargoId");

                    b.HasIndex("TariffExportId");

                    b.ToTable("GDTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GenerealSealAmount", b =>
                {
                    b.Property<long>("GenerealSealAmountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("GenerealSealAmountId");

                    b.ToTable("GenerealSealAmount");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GIIO", b =>
                {
                    b.Property<long>("GIIOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<DateTime?>("GateInTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("PCCSSSealNumber");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.Property<string>("VehicleNumber");

                    b.Property<decimal?>("Weight")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("GIIOId");

                    b.ToTable("GIIO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Good", b =>
                {
                    b.Property<long>("GoodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GoodsCode");

                    b.Property<string>("GoodsDescription");

                    b.Property<long>("GoodsHeadId");

                    b.Property<string>("GoodsName");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("GoodId");

                    b.HasIndex("GoodsHeadId");

                    b.ToTable("Good");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GoodsHead", b =>
                {
                    b.Property<long>("GoodsHeadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GoodsHeadName");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("StorageFreeDays");

                    b.HasKey("GoodsHeadId");

                    b.ToTable("GoodsHead");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GroundedContainer", b =>
                {
                    b.Property<long>("GroundedContainerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType");

                    b.Property<string>("Category");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<long?>("CyContainerId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("GroundedDate");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.Property<string>("Status");

                    b.Property<double?>("Weight");

                    b.HasKey("GroundedContainerId");

                    b.HasIndex("ContainerIndexId")
                        .IsUnique()
                        .HasFilter("[ContainerIndexId] IS NOT NULL");

                    b.HasIndex("CyContainerId");

                    b.ToTable("GroundedContainer");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GroundedDays", b =>
                {
                    b.Property<long>("GroundedDaysId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CYContainerId");

                    b.Property<long?>("Days");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("ExaminationDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("SealIssueDate");

                    b.HasKey("GroundedDaysId");

                    b.HasIndex("CYContainerId");

                    b.ToTable("GroundedDays");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GroundingFreeDay", b =>
                {
                    b.Property<long>("GroundingFreeDayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargoType");

                    b.Property<long?>("ClearingAgentId");

                    b.Property<long?>("ConsigneId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("GoodsHeadId");

                    b.Property<long?>("GroundingFreeDays");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<long?>("StorageFreeFreeDays");

                    b.HasKey("GroundingFreeDayId");

                    b.HasIndex("ClearingAgentId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("GoodsHeadId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("GroundingFreeDay");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GTE", b =>
                {
                    b.Property<long>("GTEId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierNTN");

                    b.Property<string>("Category");

                    b.Property<double>("ContainerGrossWeight");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("CountryofExit");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateOutTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LocationCode");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("PCCSSSeal");

                    b.Property<string>("PortofExit");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNo");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("GTEId");

                    b.ToTable("GTEs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GTI", b =>
                {
                    b.Property<long>("GTIId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateInDate");

                    b.Property<string>("InvoiceListRetained");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PackingListRetained");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("SealNumber");

                    b.Property<string>("Status");

                    b.Property<string>("StowCode");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("GTIId");

                    b.ToTable("GTIs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GTO", b =>
                {
                    b.Property<long>("GTOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrier");

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("Country");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<DateTime?>("GateOutDate");

                    b.Property<double?>("GrossWeight");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("PortofExit");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("SealNumber");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("TruckNumber");

                    b.Property<string>("VIRNumber");

                    b.HasKey("GTOId");

                    b.ToTable("GTO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GTOO", b =>
                {
                    b.Property<long>("GTOOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<string>("BondedCarrierNTN");

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("CountryofExit");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<DateTime?>("GateOutTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<decimal?>("NumberofPackages");

                    b.Property<string>("PCCSSSealNo");

                    b.Property<string>("PackageType");

                    b.Property<string>("PortOfExit");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("Truck");

                    b.Property<string>("VIRNumber");

                    b.Property<double?>("Weight");

                    b.HasKey("GTOOId");

                    b.ToTable("GTOO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GTTO", b =>
                {
                    b.Property<long>("GTTOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNo");

                    b.Property<string>("BondedCarrier");

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNo");

                    b.Property<string>("Country");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<DateTime?>("GateOutDate");

                    b.Property<double?>("GrossWeight");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("PortOfExit");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("SealNumber");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("TruckNumber");

                    b.Property<string>("VIRNumber");

                    b.HasKey("GTTOId");

                    b.ToTable("GTTO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Hold", b =>
                {
                    b.Property<long>("HoldId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuctionLotNo");

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("HoldDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsHold");

                    b.Property<string>("RO");

                    b.Property<string>("Role");

                    b.Property<string>("SpecialInstructions");

                    b.HasKey("HoldId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("Hold");
                });

            modelBuilder.Entity("WebdocTerminal.Models.IGMO", b =>
                {
                    b.Property<long>("IGMOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BLGrossWeight");

                    b.Property<string>("BLNumber");

                    b.Property<double?>("ContainerGrossWeight");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("CountryCode");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<string>("DestinationCode");

                    b.Property<string>("FileName");

                    b.Property<string>("HSCode");

                    b.Property<string>("IMOClass");

                    b.Property<string>("ISOCode");

                    b.Property<int?>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ManifestedSealNumber");

                    b.Property<string>("MarksAndNumber");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<double?>("NumberofPackages");

                    b.Property<string>("OpType");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("ShippingLine");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecord");

                    b.Property<string>("VIRNumber");

                    b.HasKey("IGMOId");

                    b.ToTable("IGMO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.IHC", b =>
                {
                    b.Property<long>("IHCId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int?>("ExecutionOrder");

                    b.Property<string>("FileName");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("ISGround");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("IHCId");

                    b.ToTable("IHC");
                });

            modelBuilder.Entity("WebdocTerminal.Models.IHCO", b =>
                {
                    b.Property<long>("IHCOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("ISGround");

                    b.Property<int?>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("IHCOId");

                    b.ToTable("IHCO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ImportDropOfTicket", b =>
                {
                    b.Property<long>("ImportDropOfTicketId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("InTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("OutTime");

                    b.Property<string>("ShippingLine");

                    b.Property<string>("Size");

                    b.Property<string>("TruckNumber");

                    b.Property<string>("Type");

                    b.Property<string>("VesselName");

                    b.Property<string>("VirNumber");

                    b.HasKey("ImportDropOfTicketId");

                    b.ToTable("ImportDropOfTicket");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Invoice", b =>
                {
                    b.Property<long>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActualTariffCharges");

                    b.Property<int?>("AdditionalFreeDays");

                    b.Property<DateTime?>("AdvanceDate");

                    b.Property<double>("AfterSalesTax");

                    b.Property<long>("AuctionGrandTotal");

                    b.Property<long>("AuctionSalesTax");

                    b.Property<int>("BalanceAmount");

                    b.Property<double>("BalanceAmountTotal");

                    b.Property<double>("BalanceCargo");

                    b.Property<double>("BillToLineAmount");

                    b.Property<string>("BillToLineNumber");

                    b.Property<string>("BillType");

                    b.Property<double>("CBM");

                    b.Property<string>("CNIC");

                    b.Property<long?>("CYContainerId");

                    b.Property<double>("CYStorageSizeAmount");

                    b.Property<string>("CargoType");

                    b.Property<long?>("ClearingAgentId");

                    b.Property<string>("ClearingAgentNTN");

                    b.Property<string>("ClearingAgentRep");

                    b.Property<string>("ConsigneeNTN");

                    b.Property<string>("ConsigneeName");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("DeliveredStorage");

                    b.Property<DateTime?>("DestuffDate");

                    b.Property<long>("ExcessAmount");

                    b.Property<long>("ExchangeRateAmount");

                    b.Property<DateTime?>("GateInDate");

                    b.Property<double>("GrandTotal");

                    b.Property<double>("HandingCharges");

                    b.Property<DateTime?>("InvoiceDate");

                    b.Property<bool>("InvoiceNatureType");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsAdvanceBill");

                    b.Property<bool>("IsCancelled");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("IsLetPass");

                    b.Property<long>("IsSOCCreated");

                    b.Property<double>("OtherChargeAmount");

                    b.Property<string>("PartContainer");

                    b.Property<string>("PhoneNumber");

                    b.Property<double>("PortChargeAmount");

                    b.Property<double>("PreviousBillAmount");

                    b.Property<int>("SalesTax");

                    b.Property<double>("SealCharger");

                    b.Property<int>("Size");

                    b.Property<string>("StorageApplicableon");

                    b.Property<int>("StorageDays");

                    b.Property<double>("StorageTotal");

                    b.Property<double>("TariffAmountTotal");

                    b.Property<double>("TotalAmount");

                    b.Property<double>("TotalCharges");

                    b.Property<string>("Type");

                    b.Property<double>("VehicleCharges");

                    b.Property<double>("WaiverDiscountAmount");

                    b.Property<double>("Weight");

                    b.Property<double>("WeightmentCharges");

                    b.Property<string>("Year");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ClearingAgentId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceDocument", b =>
                {
                    b.Property<long>("InvoiceDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FilePath");

                    b.Property<long?>("InvoiceId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("InvoiceDocumentId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceDocument");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceDocumentExport", b =>
                {
                    b.Property<long>("InvoiceDocumentExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FilePath");

                    b.Property<long?>("InvoiceExportId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("InvoiceDocumentExportId");

                    b.HasIndex("InvoiceExportId");

                    b.ToTable("InvoiceDocumentExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceExport", b =>
                {
                    b.Property<long>("InvoiceExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdditionalFreeDays");

                    b.Property<DateTime?>("AdvanceDate");

                    b.Property<double>("AfterDiscount");

                    b.Property<double>("AfterSalesTax");

                    b.Property<long?>("AtTimeOfInvoiceVesselExportId");

                    b.Property<long?>("AtTimeOfInvoiceVoyageExportId");

                    b.Property<double>("BWTotal");

                    b.Property<int>("BalanceAmount");

                    b.Property<double>("BalanceAmountTotal");

                    b.Property<double?>("CBM");

                    b.Property<double>("CBMTotal");

                    b.Property<string>("CNIC");

                    b.Property<long?>("ClearingAgentExportId");

                    b.Property<string>("ClearingAgentRep");

                    b.Property<string>("Consignee");

                    b.Property<string>("ConsigneeNTN");

                    b.Property<string>("ContainerNo");

                    b.Property<string>("ContainerSize");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("DestuffDate");

                    b.Property<int>("Discount");

                    b.Property<long?>("EnteringCargoId");

                    b.Property<double>("FFTotal");

                    b.Property<DateTime?>("GateInDate");

                    b.Property<double>("GrandTotal");

                    b.Property<string>("ImageUrl");

                    b.Property<double>("IndexTotal");

                    b.Property<DateTime?>("InvoiceDate");

                    b.Property<string>("InvoiceNo");

                    b.Property<string>("InvoiceType");

                    b.Property<bool>("IsAdvanceBill");

                    b.Property<bool>("IsAmountReceived");

                    b.Property<bool>("IsCancelled");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("IsPartialDelivery");

                    b.Property<bool>("IsPaymentCollectAllow");

                    b.Property<bool>("IsSubBill");

                    b.Property<int>("OtherChargeAmount");

                    b.Property<string>("OtherChargeName");

                    b.Property<int>("PaidAmount");

                    b.Property<string>("PhoneNumber");

                    b.Property<double>("PreviousBillAmount");

                    b.Property<long>("PreviousBillNo");

                    b.Property<string>("Remarks");

                    b.Property<int>("SalesTax");

                    b.Property<string>("ShippingAgent");

                    b.Property<int>("Size");

                    b.Property<int>("SizeTotal");

                    b.Property<int>("StorageDays");

                    b.Property<int>("StorageTotal");

                    b.Property<double>("TariffAmountTotal");

                    b.Property<int>("TotalAmount");

                    b.Property<double>("TotalCharges");

                    b.Property<string>("Type");

                    b.Property<long?>("VesselExportId");

                    b.Property<long?>("VoyageExportId");

                    b.Property<long>("WaiverAmount");

                    b.Property<int>("Weight");

                    b.Property<string>("Year");

                    b.HasKey("InvoiceExportId");

                    b.HasIndex("ClearingAgentExportId");

                    b.HasIndex("EnteringCargoId");

                    b.HasIndex("VesselExportId");

                    b.HasIndex("VoyageExportId");

                    b.ToTable("InvoiceExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceInquiry", b =>
                {
                    b.Property<long>("InvoiceInquiryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Ammount");

                    b.Property<double>("CBM");

                    b.Property<long?>("CYContainerId");

                    b.Property<string>("CallerName");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("InquiryAbout");

                    b.Property<DateTime>("InquiryDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.HasKey("InvoiceInquiryId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ContainerIndexId");

                    b.ToTable("InvoiceInquiry");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceItem", b =>
                {
                    b.Property<long>("InvoiceItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<long>("InvoiceId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Type");

                    b.HasKey("InvoiceItemId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceItemExport", b =>
                {
                    b.Property<long>("InvoiceItemExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<long>("InvoiceExportId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("NatureOfTariff");

                    b.Property<long?>("TariffExportId");

                    b.Property<string>("Type");

                    b.HasKey("InvoiceItemExportId");

                    b.HasIndex("InvoiceExportId");

                    b.HasIndex("TariffExportId");

                    b.ToTable("InvoiceItemExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.IPAO", b =>
                {
                    b.Property<long>("IPAOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierId");

                    b.Property<string>("BondedCarrierName");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("OpType");

                    b.Property<DateTime?>("OutTime");

                    b.Property<string>("PCCSSSealNumber");

                    b.Property<DateTime?>("Performed");

                    b.Property<string>("PortOfEntry");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("IPAOId");

                    b.ToTable("IPAOs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ISOCode", b =>
                {
                    b.Property<long>("ISOCodeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<string>("ContainerSize");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Descrition");

                    b.Property<long>("ISOCodeHeadId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("ISOCodeId");

                    b.HasIndex("ISOCodeHeadId");

                    b.ToTable("ISOCode");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ISOCodeHead", b =>
                {
                    b.Property<long>("ISOCodeHeadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("ISOCodeHeadDescription");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("ISOCodeHeadId");

                    b.ToTable("ISOCodeHead");
                });

            modelBuilder.Entity("WebdocTerminal.Models.LabourWorkOrder", b =>
                {
                    b.Property<long>("LabourWorkOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("NumberOfLabour");

                    b.Property<string>("Reason");

                    b.Property<string>("Shift");

                    b.Property<DateTime?>("WorkOrderDate");

                    b.HasKey("LabourWorkOrderId");

                    b.ToTable("LabourWorkOrder");
                });

            modelBuilder.Entity("WebdocTerminal.Models.LineSealAmount", b =>
                {
                    b.Property<long>("LineSealAmountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Amount");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ShippingAgentId");

                    b.HasKey("LineSealAmountId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("LineSealAmount");
                });

            modelBuilder.Entity("WebdocTerminal.Models.LoadingProgram", b =>
                {
                    b.Property<long>("LoadingProgramId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLearingAgentReprsentative");

                    b.Property<DateTime?>("CargoCutOff");

                    b.Property<string>("CargoRecevingCondition");

                    b.Property<string>("ClearingAgentCNIC");

                    b.Property<long?>("ClearingAgentExportId");

                    b.Property<string>("CommodityName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Destination");

                    b.Property<string>("DriverCNIC");

                    b.Property<string>("DriverName");

                    b.Property<string>("FinalDestination");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateInDate");

                    b.Property<DateTime?>("InvoiceDate");

                    b.Property<string>("InvoiceNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("IsgateIn");

                    b.Property<DateTime?>("LoadingProgramDate");

                    b.Property<string>("LoadingProgramNumber");

                    b.Property<string>("LoadingTerminal");

                    b.Property<long?>("NatureOfTariffId");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<DateTime?>("RecevingEndTime");

                    b.Property<DateTime?>("RecevingStartTime");

                    b.Property<string>("ReferenceNumber");

                    b.Property<long?>("ShipperId");

                    b.Property<string>("ShipperSeal");

                    b.Property<long?>("ShippingAgentExportId");

                    b.Property<long?>("ShippingLineExportId");

                    b.Property<long?>("ShippingLineId");

                    b.Property<DateTime?>("VesselETD");

                    b.Property<long?>("VesselExportId");

                    b.Property<long?>("VoyageExportId");

                    b.HasKey("LoadingProgramId");

                    b.HasIndex("ClearingAgentExportId");

                    b.HasIndex("NatureOfTariffId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("ShippingAgentExportId");

                    b.HasIndex("ShippingLineExportId");

                    b.HasIndex("ShippingLineId");

                    b.HasIndex("VesselExportId");

                    b.HasIndex("VoyageExportId");

                    b.ToTable("LoadingProgram");
                });

            modelBuilder.Entity("WebdocTerminal.Models.LoadingProgramDetail", b =>
                {
                    b.Property<long>("LoadingProgramDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("CBM");

                    b.Property<string>("ColorCode");

                    b.Property<DateTime?>("DOCSDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("INSDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("LoadingProgramId");

                    b.Property<string>("Location");

                    b.Property<string>("PLIDNumber");

                    b.Property<string>("PONumber");

                    b.Property<string>("PackageType");

                    b.Property<string>("Remarks");

                    b.Property<string>("Style");

                    b.Property<int?>("TotalPackages");

                    b.Property<int?>("TotalPieces");

                    b.Property<string>("WarehouseLocation");

                    b.Property<double?>("Weight");

                    b.HasKey("LoadingProgramDetailId");

                    b.HasIndex("LoadingProgramId");

                    b.ToTable("LoadingProgramDetail");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ManualGatePass", b =>
                {
                    b.Property<long>("ManualGatePassId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalancePackages");

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerindexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int?>("Delivered");

                    b.Property<DateTime?>("GatePassDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ManualGatePassNumber");

                    b.Property<long?>("RandDClerkId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Shift");

                    b.Property<int?>("TotalDelivered");

                    b.Property<int?>("TotalPackages");

                    b.Property<string>("TruckNumber");

                    b.Property<string>("Type");

                    b.HasKey("ManualGatePassId");

                    b.HasIndex("CYContainerId");

                    b.HasIndex("ContainerindexId");

                    b.HasIndex("RandDClerkId");

                    b.ToTable("ManualGatePass");
                });

            modelBuilder.Entity("WebdocTerminal.Models.MasterShippingAgent", b =>
                {
                    b.Property<long>("MasterShippingAgentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("MasterShippingAgentCode");

                    b.Property<string>("MasterShippingAgentName");

                    b.HasKey("MasterShippingAgentId");

                    b.ToTable("MasterShippingAgent");
                });

            modelBuilder.Entity("WebdocTerminal.Models.NatureOfPayment", b =>
                {
                    b.Property<long>("NatureOfPaymentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NatureOfPaymentCode");

                    b.Property<string>("NatureOfPaymentName");

                    b.HasKey("NatureOfPaymentId");

                    b.ToTable("NatureOfPayment");
                });

            modelBuilder.Entity("WebdocTerminal.Models.NatureOfTariff", b =>
                {
                    b.Property<long>("NatureOfTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NatureOfTariffName");

                    b.Property<string>("TariffType");

                    b.HasKey("NatureOfTariffId");

                    b.ToTable("NatureOfTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OCRL", b =>
                {
                    b.Property<long>("OCRLId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<string>("Category");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DocumentCodes");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<int?>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("OCRLId");

                    b.ToTable("OCRLs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OECM", b =>
                {
                    b.Property<long>("OECMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<string>("HandlingCode");

                    b.Property<string>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Remarks");

                    b.Property<string>("ServiceStatus");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("OECMId");

                    b.ToTable("OECMs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OEHC", b =>
                {
                    b.Property<long>("OEHCId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.HasKey("OEHCId");

                    b.ToTable("OEHCs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OffHireLocation", b =>
                {
                    b.Property<long>("OffHireLocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OffHireLocationName");

                    b.HasKey("OffHireLocationId");

                    b.ToTable("OffHireLocation");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OGDC", b =>
                {
                    b.Property<long>("OGDCId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerConsolidationStatus");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<double>("NumberofPackages");

                    b.Property<string>("OperationType");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("ShippingLineCode");

                    b.Property<string>("ShippingLineNTN");

                    b.Property<string>("ShippingLineName");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("OGDCId");

                    b.ToTable("OGDCs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OGDE", b =>
                {
                    b.Property<long>("OGDEId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DestinationCountry");

                    b.Property<string>("DestinationPort");

                    b.Property<string>("DocumentRequired");

                    b.Property<string>("FileName");

                    b.Property<string>("FormENumber");

                    b.Property<string>("GDNumber");

                    b.Property<double>("GrossWeight");

                    b.Property<string>("HSCode");

                    b.Property<string>("HSCodeDescription");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MarksAndNumber");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<double>("NoOfPackages");

                    b.Property<string>("OperationType");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VehicleNo");

                    b.HasKey("OGDEId");

                    b.ToTable("OGDEs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OGIE", b =>
                {
                    b.Property<long>("OGIEId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateIn");

                    b.Property<string>("GateInStatus");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<int?>("NoOfPackages");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VehicleNumber");

                    b.Property<double>("Weight");

                    b.HasKey("OGIEId");

                    b.ToTable("OGIEs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OGTE", b =>
                {
                    b.Property<long>("OGTEId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierNTN");

                    b.Property<double>("ContainerGrossWeight");

                    b.Property<string>("ContainerNumber");

                    b.Property<string>("CountryofExit");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<DateTime?>("GateOutTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("LocationCode");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("PCCSSSeal");

                    b.Property<string>("PortofExit");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("OGTEId");

                    b.ToTable("OGTEs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OperationDprt", b =>
                {
                    b.Property<long>("OperationDprtId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OperationDprtCode");

                    b.Property<string>("OperationDprtName");

                    b.HasKey("OperationDprtId");

                    b.ToTable("OperationDprt");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OPIA", b =>
                {
                    b.Property<long>("OPIAId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClearingAgentChallanNumber");

                    b.Property<string>("ClearingAgentName");

                    b.Property<string>("CongisneeAddress");

                    b.Property<string>("CongisneeName");

                    b.Property<string>("ConsignorAddress");

                    b.Property<string>("ConsignorNTN");

                    b.Property<string>("ConsignorName");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<double>("GrossWeight");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<double>("NoOfPackages");

                    b.Property<string>("OperationType");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VehicleNo");

                    b.HasKey("OPIAId");

                    b.ToTable("OPIAs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OSIM", b =>
                {
                    b.Property<long>("OSIMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlockedBy");

                    b.Property<string>("Category");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.HasKey("OSIMId");

                    b.ToTable("OSIMs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OSRC", b =>
                {
                    b.Property<long>("OSRCId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType");

                    b.Property<string>("BLNumber");

                    b.Property<string>("Category");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<string>("HandlingCode");

                    b.Property<int?>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("Location");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("VIRNumber");

                    b.Property<double>("Weight");

                    b.HasKey("OSRCId");

                    b.ToTable("OSRCs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OSVM", b =>
                {
                    b.Property<long>("OSVMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierNTN");

                    b.Property<string>("BondedCarrierName");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("OPType");

                    b.Property<string>("PCCSSSealNumber");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("SealingOfficerName");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNo");

                    b.Property<string>("VehicleNo");

                    b.HasKey("OSVMId");

                    b.ToTable("OSVMs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OtherCharge", b =>
                {
                    b.Property<long>("OtherChargeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ChargeAmount");

                    b.Property<string>("ChargeName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("OtherChargeId");

                    b.ToTable("OtherCharge");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OtherChargeAssigning", b =>
                {
                    b.Property<long>("OtherChargeAssigningId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AmountAssign");

                    b.Property<double>("ChargeAmount");

                    b.Property<string>("ChargeName");

                    b.Property<double>("ChargeQuantity");

                    b.Property<long>("ContainerIndexId");

                    b.Property<long>("CyContainerId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("InvoiceCreated");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.HasKey("OtherChargeAssigningId");

                    b.ToTable("OtherChargeAssigning");
                });

            modelBuilder.Entity("WebdocTerminal.Models.OVAM", b =>
                {
                    b.Property<long>("OVAMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivityTime");

                    b.Property<string>("ActivityType");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OperationType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIR_AIRNumber");

                    b.HasKey("OVAMId");

                    b.ToTable("OVAMs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PackageTypeExport", b =>
                {
                    b.Property<long>("PackageTypeExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MaterialType");

                    b.Property<string>("PackageType");

                    b.HasKey("PackageTypeExportId");

                    b.ToTable("PackageTypeExports");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ParkingTicket", b =>
                {
                    b.Property<long>("ParkingTicketId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DriverName");

                    b.Property<string>("DriverPhoneNo");

                    b.Property<DateTime?>("EnteryDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ParkingTicketNumber");

                    b.Property<string>("TruckNo");

                    b.Property<string>("TruckingCompany");

                    b.HasKey("ParkingTicketId");

                    b.ToTable("ParkingTicket");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Party", b =>
                {
                    b.Property<long>("PartyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClearingAgentId");

                    b.Property<long?>("ConsigneId");

                    b.Property<string>("Consignee");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PartyName");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<long?>("ShippingLineId");

                    b.HasKey("PartyId");

                    b.HasIndex("ClearingAgentId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("ShippingLineId");

                    b.ToTable("Party");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PartyExport", b =>
                {
                    b.Property<long>("PartyExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Consignee");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PartyName");

                    b.HasKey("PartyExportId");

                    b.ToTable("PartyExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PartyLedger", b =>
                {
                    b.Property<long>("PartyLedgerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AmountReceivedId");

                    b.Property<double>("Balance");

                    b.Property<long?>("BankId");

                    b.Property<string>("BillNo");

                    b.Property<long?>("ChequeRecivedId");

                    b.Property<double>("Credit");

                    b.Property<double>("Debit");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSettled");

                    b.Property<DateTime?>("LedgerDate");

                    b.Property<long?>("PartyId");

                    b.Property<long?>("RefundAmountId");

                    b.Property<string>("Type");

                    b.HasKey("PartyLedgerId");

                    b.HasIndex("AmountReceivedId");

                    b.HasIndex("BankId");

                    b.HasIndex("ChequeRecivedId");

                    b.HasIndex("PartyId");

                    b.HasIndex("RefundAmountId");

                    b.ToTable("PartyLedger");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PartyLedgerExport", b =>
                {
                    b.Property<long>("PartyLedgerExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AmountReceivedExportId");

                    b.Property<double>("Balance");

                    b.Property<long?>("BankId");

                    b.Property<string>("BillNo");

                    b.Property<long?>("ChequeRecivedExportId");

                    b.Property<double>("Credit");

                    b.Property<double>("Debit");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LedgerDate");

                    b.Property<long?>("PartyExportId");

                    b.Property<long?>("RefundAmountExportId");

                    b.Property<string>("Type");

                    b.HasKey("PartyLedgerExportId");

                    b.HasIndex("AmountReceivedExportId");

                    b.HasIndex("BankId");

                    b.HasIndex("ChequeRecivedExportId");

                    b.HasIndex("PartyExportId");

                    b.HasIndex("RefundAmountExportId");

                    b.ToTable("PartyLedgerExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PaymentReceived", b =>
                {
                    b.Property<long>("PaymentReceivedId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AICTAccountNumber");

                    b.Property<long?>("BankId");

                    b.Property<long>("CreditAllowed");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("InoviceNo");

                    b.Property<long>("InsturmentNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("KnockOffAmount");

                    b.Property<string>("KnockOffInvoiceNo");

                    b.Property<string>("NatureOfAmount");

                    b.Property<string>("PaymentFor");

                    b.Property<long>("ReceivedAmount");

                    b.HasKey("PaymentReceivedId");

                    b.HasIndex("BankId");

                    b.ToTable("PaymentReceived");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PaymentUpdate", b =>
                {
                    b.Property<long>("PaymentUpdateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("PaymentUpdateCreatedDate");

                    b.Property<string>("PreAlertNumber");

                    b.Property<DateTime>("RequestDate");

                    b.Property<long>("RequestNumber");

                    b.Property<bool>("Status");

                    b.HasKey("PaymentUpdateId");

                    b.ToTable("PaymentUpdate");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PaymentUpdateDetail", b =>
                {
                    b.Property<long>("PaymentUpdateDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<double>("Lolo");

                    b.Property<long>("PaymentUpdateId");

                    b.Property<long>("PreAlterDetailId");

                    b.Property<double>("SecDeposit");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<long?>("ShippingAgentIdForLoLo");

                    b.Property<long?>("ShippingAgentIdForSD");

                    b.Property<long?>("ShippingAgentIdForTHC");

                    b.Property<long?>("ShippingLineId");

                    b.Property<long?>("ShippingLineIdForLOLO");

                    b.Property<long?>("ShippingLineIdForSD");

                    b.Property<long?>("ShippingLineIdForTHC");

                    b.Property<double>("THC");

                    b.Property<double>("THCDoc");

                    b.Property<double>("THCInsurance");

                    b.Property<double>("THCOthers");

                    b.Property<double>("TotalCharges");

                    b.Property<double>("TotalTHCCharges");

                    b.HasKey("PaymentUpdateDetailId");

                    b.HasIndex("PaymentUpdateId");

                    b.HasIndex("PreAlterDetailId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("ShippingLineId");

                    b.ToTable("PaymentUpdateDetail");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Permission", b =>
                {
                    b.Property<long>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AppPageId");

                    b.Property<bool>("Create");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FormUrl");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("Read");

                    b.Property<string>("RoleId");

                    b.Property<bool>("Update");

                    b.HasKey("PermissionId");

                    b.HasIndex("AppPageId");

                    b.HasIndex("RoleId");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PGateInOut", b =>
                {
                    b.Property<long>("PGateInOutId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNIC");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DocumentRetain");

                    b.Property<string>("ImageUrl");

                    b.Property<DateTime?>("InDateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsGateIn");

                    b.Property<bool>("IsGateOut");

                    b.Property<string>("Name");

                    b.Property<DateTime?>("OuttDateTime");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Remarks");

                    b.Property<string>("VisitReason");

                    b.Property<string>("VisitorCompany");

                    b.HasKey("PGateInOutId");

                    b.ToTable("PGateInOut");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PGO", b =>
                {
                    b.Property<long>("PGOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierId");

                    b.Property<string>("BondedCarrierName");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OpType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("PGOId");

                    b.ToTable("PGO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PGOO", b =>
                {
                    b.Property<long>("PGOOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNo");

                    b.Property<string>("BondedCarrierId");

                    b.Property<string>("BondedCarrierName");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<int?>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("OpType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequenceNo");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNo");

                    b.Property<string>("VehicleNo");

                    b.HasKey("PGOOId");

                    b.ToTable("PGOO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PIA", b =>
                {
                    b.Property<long>("PIAId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BookingNo");

                    b.Property<string>("Category");

                    b.Property<string>("CertificateNo");

                    b.Property<string>("ClearingAgent");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DestinationCountry");

                    b.Property<string>("DestinationPort");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OperationType");

                    b.Property<string>("Origin");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("SealNo");

                    b.Property<string>("Shipper");

                    b.Property<string>("ShipperNTN");

                    b.Property<string>("ShippingLine");

                    b.Property<int?>("TotalRecords");

                    b.HasKey("PIAId");

                    b.ToTable("PIAs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.POLocation", b =>
                {
                    b.Property<long>("POLocationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LoadingProgramNumber");

                    b.Property<string>("Location");

                    b.Property<string>("PONumber");

                    b.HasKey("POLocationId");

                    b.ToTable("POLocation");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PortAndTerminal", b =>
                {
                    b.Property<long>("PortAndTerminalId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Destination");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PortName");

                    b.Property<string>("PortOfDischarge");

                    b.Property<double>("RateAmount20");

                    b.Property<double>("RateAmount40");

                    b.Property<double>("RateAmount45");

                    b.Property<string>("TerminalCode");

                    b.Property<string>("TerminalName");

                    b.HasKey("PortAndTerminalId");

                    b.ToTable("PortAndTerminal");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PortAndTerminalExport", b =>
                {
                    b.Property<long>("PortAndTerminalExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Destination");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PortName");

                    b.Property<string>("PortOfDischarge");

                    b.Property<string>("TerminalCode");

                    b.Property<string>("TerminalName");

                    b.HasKey("PortAndTerminalExportId");

                    b.ToTable("PortAndTerminalExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PortCharge", b =>
                {
                    b.Property<long>("PortChargeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ANF");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double>("DemurrageCharges");

                    b.Property<double>("DetentionChargesOrBulletSeal");

                    b.Property<int>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<double>("LoloCharges");

                    b.Property<double>("OtherCharges");

                    b.Property<double>("OverWeightPenalty");

                    b.Property<double>("Pallet");

                    b.Property<double>("QictCharges");

                    b.Property<double>("Recover");

                    b.Property<double>("ThcPhcKdlpCharges");

                    b.Property<double>("TotalCharges");

                    b.Property<double>("TransportCharges");

                    b.Property<string>("VirNumber");

                    b.Property<double>("WashAndCleanCharges");

                    b.Property<double>("WeighmentCharges");

                    b.HasKey("PortChargeId");

                    b.ToTable("PortCharge");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlert", b =>
                {
                    b.Property<long>("PreAlertId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AlertStatus");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime>("ETADate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("PortAndTerminalId");

                    b.Property<DateTime>("PreAlertDate");

                    b.Property<string>("PreAlertNumber");

                    b.Property<long>("PreAlertVesselId");

                    b.Property<long>("ShippingAgentId");

                    b.Property<long>("ShippingAgentLineId");

                    b.Property<string>("Vessel");

                    b.Property<string>("Voyage");

                    b.HasKey("PreAlertId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("PreAlertVesselId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("PreAlert");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlertPayOrder", b =>
                {
                    b.Property<long>("PreAlertPayOrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BankBranchId");

                    b.Property<long>("BankId");

                    b.Property<string>("Bvp");

                    b.Property<string>("ChequeNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("PayOrderCreatedDate");

                    b.Property<string>("PreAlertPayOrderNumber");

                    b.Property<long>("RequestNumber");

                    b.HasKey("PreAlertPayOrderId");

                    b.ToTable("PreAlertPayOrder");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlertPayOrderDetail", b =>
                {
                    b.Property<long>("PreAlertPayOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<long>("BankBranchId");

                    b.Property<long>("BankId");

                    b.Property<string>("Bvp");

                    b.Property<string>("ChequeNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPreAlertPayOrder");

                    b.Property<DateTime>("PreAlertPayOrderDate");

                    b.Property<long>("PreAlertPayOrderId");

                    b.Property<string>("Remarks");

                    b.Property<string>("ShippingAgentName");

                    b.Property<string>("ShippingLineName");

                    b.Property<string>("key");

                    b.HasKey("PreAlertPayOrderDetailId");

                    b.HasIndex("BankBranchId");

                    b.HasIndex("BankId");

                    b.HasIndex("PreAlertPayOrderId");

                    b.ToTable("PreAlertPayOrderDetail");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlertVessel", b =>
                {
                    b.Property<long>("PreAlertVesselId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PreAlertVesselName");

                    b.HasKey("PreAlertVesselId");

                    b.ToTable("PreAlertVessel");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlterDetail", b =>
                {
                    b.Property<long>("PreAlterDetailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargoType");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime>("ETADate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MasterBLNumber");

                    b.Property<long>("PortAndTerminalId");

                    b.Property<long?>("PreAlertId");

                    b.Property<string>("Remarks");

                    b.Property<string>("SOCCOC");

                    b.Property<long>("ShippingLineId");

                    b.Property<long>("Size");

                    b.Property<string>("Type");

                    b.Property<string>("Vessel");

                    b.Property<string>("VoyageNumber");

                    b.HasKey("PreAlterDetailId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("PreAlertId");

                    b.HasIndex("ShippingLineId");

                    b.ToTable("PreAlterDetail");
                });

            modelBuilder.Entity("WebdocTerminal.Models.RandDClerk", b =>
                {
                    b.Property<long>("RandDClerkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("RandDClerkName");

                    b.HasKey("RandDClerkId");

                    b.ToTable("RandDClerk");
                });

            modelBuilder.Entity("WebdocTerminal.Models.RefundAmount", b =>
                {
                    b.Property<long>("RefundAmountId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankId");

                    b.Property<DateTime>("ChequeDate");

                    b.Property<double>("CreditAmount");

                    b.Property<DateTime>("Date");

                    b.Property<double>("DebitAmount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("KnockOfInvoice");

                    b.Property<long?>("PartyExportId");

                    b.Property<long?>("PartyId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Type");

                    b.Property<string>("chequeNumber");

                    b.HasKey("RefundAmountId");

                    b.HasIndex("BankId");

                    b.HasIndex("PartyExportId");

                    b.HasIndex("PartyId");

                    b.ToTable("RefundAmount");
                });

            modelBuilder.Entity("WebdocTerminal.Models.RefundAmountExport", b =>
                {
                    b.Property<long>("RefundAmountExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BankId");

                    b.Property<DateTime>("ChequeDate");

                    b.Property<double>("CreditAmount");

                    b.Property<DateTime>("Date");

                    b.Property<double>("DebitAmount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("KnockOfInvoice");

                    b.Property<long?>("PartyExportId");

                    b.Property<long?>("PartyId");

                    b.Property<string>("Remarks");

                    b.Property<string>("Type");

                    b.Property<string>("chequeNumber");

                    b.HasKey("RefundAmountExportId");

                    b.HasIndex("BankId");

                    b.HasIndex("PartyExportId");

                    b.HasIndex("PartyId");

                    b.ToTable("RefundAmountExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ReturnToYard", b =>
                {
                    b.Property<long>("ReturnToYardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DocumentReceived");

                    b.Property<long>("EmptyGateOutContainerId");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("ReturnToYardDate");

                    b.Property<string>("ReturnToYardName");

                    b.HasKey("ReturnToYardId");

                    b.HasIndex("EmptyGateOutContainerId");

                    b.ToTable("ReturnToYard");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SalesTax", b =>
                {
                    b.Property<long>("SalesTaxId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("SalesTaxAmount");

                    b.Property<string>("Type");

                    b.HasKey("SalesTaxId");

                    b.ToTable("SalesTax");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SalesTaxIndexWise", b =>
                {
                    b.Property<long>("SalesTaxIndexWiseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("SalesTaxAmount");

                    b.HasKey("SalesTaxIndexWiseId");

                    b.ToTable("SalesTaxIndexWise");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ScheduleOfCharge", b =>
                {
                    b.Property<long>("ScheduleOfChargeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ActualM3");

                    b.Property<double?>("ActualWt");

                    b.Property<double>("AfterWaiverAmount");

                    b.Property<double>("Amount");

                    b.Property<DateTime?>("ArriveDate");

                    b.Property<double>("BLM3");

                    b.Property<string>("BLNo");

                    b.Property<string>("BillEnteryNo");

                    b.Property<string>("CYCFS");

                    b.Property<double>("CYStorageSizeAmount");

                    b.Property<string>("ClearingAgent");

                    b.Property<string>("Consignee");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("DeliveryDate");

                    b.Property<DateTime?>("IGMDate");

                    b.Property<string>("IGMNo");

                    b.Property<string>("Igmodesc");

                    b.Property<string>("Indexno");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LineName");

                    b.Property<double>("ManifestedM3");

                    b.Property<double?>("ManifestedWt");

                    b.Property<string>("NTNNo");

                    b.Property<double>("NetCharges");

                    b.Property<double>("OtherChargeAmount");

                    b.Property<string>("Principal");

                    b.Property<string>("STNNo");

                    b.Property<double>("SalesTax");

                    b.Property<double>("SalesTaxAmount");

                    b.Property<int>("Size");

                    b.Property<double>("StorageAmount");

                    b.Property<int>("StorageDays");

                    b.Property<string>("TariffName");

                    b.Property<double>("TotalCharges");

                    b.Property<string>("VesselName");

                    b.Property<string>("VoyageNo");

                    b.Property<double>("WaiverAmount");

                    b.HasKey("ScheduleOfChargeId");

                    b.ToTable("ScheduleOfCharge");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ScheduleOfChargeItem", b =>
                {
                    b.Property<long>("ScheduleOfChargeItemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ScheduleOfChargeId");

                    b.Property<string>("Type");

                    b.HasKey("ScheduleOfChargeItemId");

                    b.HasIndex("ScheduleOfChargeId");

                    b.ToTable("ScheduleOfChargeItem");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SCMO", b =>
                {
                    b.Property<long>("SCMOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNo");

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<int>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<double?>("NoOfPackages");

                    b.Property<string>("OpType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequenceNo");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("TpNo");

                    b.Property<string>("VIRNo");

                    b.Property<double?>("Weight");

                    b.HasKey("SCMOId");

                    b.ToTable("SCMO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SealIssue", b =>
                {
                    b.Property<long>("SealIssueId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BatchNumber");

                    b.Property<long>("CYContainerId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("Rate");

                    b.Property<long>("SealNumber");

                    b.HasKey("SealIssueId");

                    b.HasIndex("CYContainerId");

                    b.ToTable("SealIssue");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SealPurchase", b =>
                {
                    b.Property<long>("SealPurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AssignStatus");

                    b.Property<long>("CurrentSealNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<double>("Rate");

                    b.Property<long>("RemaingSeal");

                    b.Property<long>("SealFrom");

                    b.Property<string>("SealPurchaseNo");

                    b.Property<long>("SealTo");

                    b.Property<long>("TotalSeal");

                    b.HasKey("SealPurchaseId");

                    b.ToTable("SealPurchase");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ServiceCompletion", b =>
                {
                    b.Property<long>("ServiceCompletionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType");

                    b.Property<string>("BLNumber");

                    b.Property<string>("Category");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("GDNumber");

                    b.Property<string>("HandlingCode");

                    b.Property<string>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.Property<DateTime?>("ServiceDate");

                    b.Property<string>("VIRNumber");

                    b.Property<int?>("Weight");

                    b.HasKey("ServiceCompletionId");

                    b.ToTable("ServiceCompletions");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ServicesInfo", b =>
                {
                    b.Property<long>("ServicesInfoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("NatureOfPaymentId");

                    b.Property<double>("Rate");

                    b.Property<string>("ServicesInfoCode");

                    b.Property<string>("ServicesInfoName");

                    b.Property<long>("ServicesSectionId");

                    b.Property<long>("ServicesTypeId");

                    b.HasKey("ServicesInfoId");

                    b.HasIndex("NatureOfPaymentId");

                    b.HasIndex("ServicesSectionId");

                    b.HasIndex("ServicesTypeId");

                    b.ToTable("ServicesInfo");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ServicesSection", b =>
                {
                    b.Property<long>("ServicesSectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ServicesSectionCode");

                    b.HasKey("ServicesSectionId");

                    b.ToTable("ServicesSection");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ServicesType", b =>
                {
                    b.Property<long>("ServicesTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ServicesTypeCode");

                    b.Property<string>("ServicesTypeName");

                    b.HasKey("ServicesTypeId");

                    b.ToTable("ServicesType");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Shipper", b =>
                {
                    b.Property<long>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactPerson");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("EmailAddress");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NTNNumber");

                    b.Property<string>("ShipperName");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("ShipperId");

                    b.ToTable("Shipper");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShipperExport", b =>
                {
                    b.Property<long>("ShipperExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactPerson");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("EmailAddress");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NTNNumber");

                    b.Property<string>("ShipperName");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("ShipperExportId");

                    b.ToTable("ShipperExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgent", b =>
                {
                    b.Property<long>("ShippingAgentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowExaminationAutoChrges");

                    b.Property<string>("AllowSpecialChargeCY");

                    b.Property<string>("AllowSpecialChargeFCL");

                    b.Property<string>("AllowSpecialChargeLCL");

                    b.Property<string>("BillDateType");

                    b.Property<string>("BillDateTypeCY");

                    b.Property<string>("BillDateTypeFCL");

                    b.Property<string>("Category");

                    b.Property<string>("ChargesName");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Line");

                    b.Property<string>("LineCode");

                    b.Property<long?>("MasterShippingAgentId");

                    b.Property<string>("NTNNumber");

                    b.Property<string>("Name");

                    b.Property<int>("OtherCharges");

                    b.Property<string>("VehcileAmountAllow");

                    b.Property<string>("WeightAllow");

                    b.Property<double>("WeightAmount");

                    b.HasKey("ShippingAgentId");

                    b.HasIndex("MasterShippingAgentId");

                    b.ToTable("ShippingAgent");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgentExport", b =>
                {
                    b.Property<long>("ShippingAgentExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("ContactPerson");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Email");

                    b.Property<string>("ImplementFrom");

                    b.Property<string>("ImplementTo");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("NatureOfTariffId");

                    b.Property<string>("ShippingAgentName");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("ShippingAgentExportId");

                    b.HasIndex("NatureOfTariffId");

                    b.ToTable("ShippingAgentExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgentTariff", b =>
                {
                    b.Property<long>("ShippingAgentTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ShippingAgentId");

                    b.Property<long?>("TariffExportId");

                    b.Property<long>("TariffId");

                    b.HasKey("ShippingAgentTariffId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("TariffExportId");

                    b.HasIndex("TariffId");

                    b.ToTable("ShippingAgentTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgentTariffExport", b =>
                {
                    b.Property<long>("ShippingAgentTariffExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CBMMultiply");

                    b.Property<int>("CBMMultiplyValue");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("ShippingAgentExportId");

                    b.Property<long>("TariffExportId");

                    b.HasKey("ShippingAgentTariffExportId");

                    b.HasIndex("ShippingAgentExportId");

                    b.HasIndex("TariffExportId");

                    b.ToTable("ShippingAgentTariffExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingLine", b =>
                {
                    b.Property<long>("ShippingLineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NTNNumber");

                    b.Property<string>("ShippingLineAgent");

                    b.Property<string>("ShippingLineCode");

                    b.Property<string>("ShippingLineName");

                    b.HasKey("ShippingLineId");

                    b.ToTable("ShippingLine");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingLineExport", b =>
                {
                    b.Property<long>("ShippingLineExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NTNNumber");

                    b.Property<string>("ShippingLineCode");

                    b.Property<string>("ShippingLineName");

                    b.HasKey("ShippingLineExportId");

                    b.ToTable("ShippingLineExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SIM", b =>
                {
                    b.Property<long>("SIMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("UserId");

                    b.Property<string>("VIRNumber");

                    b.HasKey("SIMId");

                    b.ToTable("SIM");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SIMO", b =>
                {
                    b.Property<long>("SIMOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber");

                    b.Property<string>("BlockedBy");

                    b.Property<string>("Category");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.HasKey("SIMOId");

                    b.ToTable("SIMO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SRC", b =>
                {
                    b.Property<long>("SRCId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType");

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("Location");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("Status");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.Property<double?>("Weight");

                    b.HasKey("SRCId");

                    b.ToTable("SRC");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SRCO", b =>
                {
                    b.Property<long>("SRCOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType");

                    b.Property<string>("BLNumber");

                    b.Property<string>("Category");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("HandlingCode");

                    b.Property<int?>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("Location");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.Property<double?>("Weight");

                    b.HasKey("SRCOId");

                    b.ToTable("SRCO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.StorageFreeDay", b =>
                {
                    b.Property<long>("StorageFreeDayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClearingAgentId");

                    b.Property<long?>("ConsigneId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("GoodsHeadId");

                    b.Property<long?>("ISOCodeHeadId");

                    b.Property<string>("IndexCargoType");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<long?>("ShipperId");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<long?>("StorageFreeDays");

                    b.Property<long?>("TariffId");

                    b.HasKey("StorageFreeDayId");

                    b.HasIndex("ClearingAgentId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("GoodsHeadId");

                    b.HasIndex("ISOCodeHeadId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("TariffId");

                    b.ToTable("StorageFreeDay");
                });

            modelBuilder.Entity("WebdocTerminal.Models.StorageFreeDaysForHoliday", b =>
                {
                    b.Property<long>("StorageFreeDaysForHolidayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("Freedays");

                    b.Property<int>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("VirNumber");

                    b.HasKey("StorageFreeDaysForHolidayId");

                    b.ToTable("StorageFreeDaysForHoliday");
                });

            modelBuilder.Entity("WebdocTerminal.Models.StorageSlab", b =>
                {
                    b.Property<long>("StorageSlabId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AICTRate");

                    b.Property<int>("AICTRate20");

                    b.Property<int>("AICTRate40");

                    b.Property<int>("AICTRate45");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<int>("FFRate");

                    b.Property<int>("FFRate20");

                    b.Property<int>("FFRate40");

                    b.Property<int>("FFRate45");

                    b.Property<int>("FreeDays");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NoOfDays");

                    b.Property<int>("Rate");

                    b.Property<int>("Rate20");

                    b.Property<int>("Rate40");

                    b.Property<int>("Rate45");

                    b.Property<long>("TariffId");

                    b.HasKey("StorageSlabId");

                    b.HasIndex("TariffId");

                    b.ToTable("StorageSlab");
                });

            modelBuilder.Entity("WebdocTerminal.Models.StorageSlabExport", b =>
                {
                    b.Property<long>("StorageSlabExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<int>("FreeDays");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NoOfDays");

                    b.Property<int>("Rate");

                    b.Property<int>("Rate20");

                    b.Property<int>("Rate40");

                    b.Property<int>("Rate45");

                    b.Property<long>("TariffExportId");

                    b.HasKey("StorageSlabExportId");

                    b.HasIndex("TariffExportId");

                    b.ToTable("StorageSlabExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SVM", b =>
                {
                    b.Property<long>("SVMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierId");

                    b.Property<string>("BondedCarrierNTN");

                    b.Property<string>("BondedCarrierName");

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<string>("GDNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OpType");

                    b.Property<string>("PCCSSSealNumber");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<string>("SealingOfficerName");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("SVMId");

                    b.ToTable("SVM");
                });

            modelBuilder.Entity("WebdocTerminal.Models.SVMO", b =>
                {
                    b.Property<long>("SVMOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BondedCarrierId");

                    b.Property<string>("BondedCarrierName");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("OpType");

                    b.Property<string>("PCCSSSealNumber");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequenceNo");

                    b.Property<string>("SealingOfficerName");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNo");

                    b.Property<string>("VehicleNo");

                    b.HasKey("SVMOId");

                    b.ToTable("SVMO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Tariff", b =>
                {
                    b.Property<long>("TariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CBMRate");

                    b.Property<bool>("DailyCharges");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int>("DevededIndexAmount");

                    b.Property<DateTime?>("ImplementFrom");

                    b.Property<DateTime?>("ImplementTo");

                    b.Property<bool>("IsActive");

                    b.Property<bool?>("IsCBMorRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsDollerRate");

                    b.Property<bool>("IsFixedRate");

                    b.Property<bool>("IsGeneral");

                    b.Property<int>("PerIndexRate");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<int>("Rate20");

                    b.Property<int>("Rate40");

                    b.Property<int>("Rate45");

                    b.Property<bool?>("RoundCBMCode");

                    b.Property<DateTime?>("TariffDate");

                    b.Property<long?>("TariffHeadId");

                    b.Property<string>("TypeOfImplementation");

                    b.Property<string>("TypeOfTarifff");

                    b.Property<int>("WeightRate");

                    b.HasKey("TariffId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("TariffHeadId");

                    b.ToTable("Tariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffExport", b =>
                {
                    b.Property<long>("TariffExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CBMFixedRate");

                    b.Property<int>("CBMMultiplyValue");

                    b.Property<int>("CBMRate");

                    b.Property<bool>("DailyCharges");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("ImplementFrom");

                    b.Property<bool>("IsActive");

                    b.Property<bool?>("IsCBMorRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("NatureOfTariffId");

                    b.Property<int>("PerIndexRate");

                    b.Property<int>("Rate20");

                    b.Property<int>("Rate40");

                    b.Property<int>("Rate45");

                    b.Property<bool?>("RoundCBMCode");

                    b.Property<DateTime?>("TariffDate");

                    b.Property<long?>("TariffHeadExportId");

                    b.Property<string>("TariffType");

                    b.Property<int>("WeightRate");

                    b.HasKey("TariffExportId");

                    b.HasIndex("NatureOfTariffId");

                    b.HasIndex("TariffHeadExportId");

                    b.ToTable("TariffExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffHead", b =>
                {
                    b.Property<long>("TariffHeadId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("TariffHeadType");

                    b.HasKey("TariffHeadId");

                    b.ToTable("TariffHead");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffHeadExport", b =>
                {
                    b.Property<long>("TariffHeadExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("TariffHeadExportType");

                    b.HasKey("TariffHeadExportId");

                    b.ToTable("TariffHeadExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffInformation", b =>
                {
                    b.Property<long>("TariffInformationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClearingAgentId");

                    b.Property<long?>("ConsigneId");

                    b.Property<string>("ContainerStatus");

                    b.Property<long?>("DGFreeDays");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("GoodsHeadId");

                    b.Property<long?>("ISOCodeHeadId");

                    b.Property<string>("IndexCargoType");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsEnableDisabled");

                    b.Property<long>("PercentAgeShippingAgentId");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<long?>("ShipperId");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<long?>("StorageFreeDays");

                    b.Property<string>("TariffType");

                    b.HasKey("TariffInformationId");

                    b.HasIndex("ClearingAgentId");

                    b.HasIndex("ConsigneId");

                    b.HasIndex("GoodsHeadId");

                    b.HasIndex("ISOCodeHeadId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("ShipperId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("TariffInformation");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffInofrmationTariff", b =>
                {
                    b.Property<long>("TariffInofrmationTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("ExaminationTariffId");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("TariffId");

                    b.Property<long>("TariffInformationId");

                    b.HasKey("TariffInofrmationTariffId");

                    b.HasIndex("ExaminationTariffId");

                    b.HasIndex("TariffId");

                    b.HasIndex("TariffInformationId");

                    b.ToTable("TariffInofrmationTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffPercentage", b =>
                {
                    b.Property<long>("TariffPercentageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("RateOnPersent");

                    b.Property<long>("ShippingAgentId");

                    b.Property<long>("TariffHeadId");

                    b.Property<string>("TariffPercentType");

                    b.HasKey("TariffPercentageId");

                    b.HasIndex("ShippingAgentId");

                    b.HasIndex("TariffHeadId");

                    b.ToTable("TariffPercentage");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffRateSlabWise", b =>
                {
                    b.Property<long>("TariffRateSlabWiseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("FromCBM");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("Rate");

                    b.Property<long>("TariffExportId");

                    b.Property<long>("ToCBM");

                    b.HasKey("TariffRateSlabWiseId");

                    b.HasIndex("TariffExportId");

                    b.ToTable("TariffRateSlabWise");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TellySheet", b =>
                {
                    b.Property<long>("TellySheetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerType");

                    b.Property<string>("DayNight");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime?>("DestuffDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<string>("TellyClerk");

                    b.HasKey("TellySheetId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("TellySheet");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TerminalAndFFShareRate", b =>
                {
                    b.Property<long>("TerminalAndFFShareRateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AICTCBMRate");

                    b.Property<int>("AICTPerIndexRate");

                    b.Property<int>("AICTRate20");

                    b.Property<int>("AICTRate40");

                    b.Property<int>("AICTRate45");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<int>("FFCBMRate");

                    b.Property<int>("FFPerIndexRate");

                    b.Property<int>("FFRate20");

                    b.Property<int>("FFRate40");

                    b.Property<int>("FFRate45");

                    b.Property<long?>("GoodsHeadId");

                    b.Property<string>("IndexCargoType");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<int>("TotalAICTCBMRate");

                    b.Property<int>("TotalAICTPerIndexRate");

                    b.Property<int>("TotalAICTRate20");

                    b.Property<int>("TotalAICTRate40");

                    b.Property<int>("TotalAICTRate45");

                    b.HasKey("TerminalAndFFShareRateId");

                    b.HasIndex("GoodsHeadId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("TerminalAndFFShareRate");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TPCargoDetails", b =>
                {
                    b.Property<long>("TPCargoDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CBM");

                    b.Property<string>("CargoCondition");

                    b.Property<string>("ColorCode");

                    b.Property<double>("DGClass");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DischargePort");

                    b.Property<string>("FinalDestination");

                    b.Property<bool>("IsDG");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPIFFA");

                    b.Property<bool>("IsReefer");

                    b.Property<long?>("LoadingProgramId");

                    b.Property<string>("Location");

                    b.Property<int>("NoOfPackagesReceived");

                    b.Property<string>("PLIDNumber");

                    b.Property<string>("PackageType");

                    b.Property<DateTime?>("ReceiveEndDate");

                    b.Property<DateTime?>("ReceiveStartDate");

                    b.Property<string>("ReceivedFor");

                    b.Property<string>("Remarks");

                    b.Property<long?>("TPReceiveVehicleId");

                    b.Property<string>("Temperature");

                    b.Property<long?>("VesselExportId");

                    b.Property<long?>("VoyageExportId");

                    b.Property<string>("WarehouseLocation");

                    b.Property<double>("Weight");

                    b.Property<double>("WeightDecalred");

                    b.HasKey("TPCargoDetailsId");

                    b.HasIndex("LoadingProgramId");

                    b.HasIndex("TPReceiveVehicleId");

                    b.HasIndex("VesselExportId");

                    b.HasIndex("VoyageExportId");

                    b.ToTable("TPCargoDetails");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TPReceiveVehicle", b =>
                {
                    b.Property<long>("TPReceiveVehicleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentCNIC");

                    b.Property<string>("AgentRepresentative");

                    b.Property<long>("ClearingAgentExportId");

                    b.Property<string>("ContainerGrossWeight");

                    b.Property<bool>("ContainerPresent");

                    b.Property<string>("CotnainerNo");

                    b.Property<DateTime?>("CreatedAt");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("DriverCNIC");

                    b.Property<string>("DriverName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<string>("SealNo");

                    b.Property<string>("VehicleNo");

                    b.HasKey("TPReceiveVehicleId");

                    b.HasIndex("ClearingAgentExportId");

                    b.ToTable("TPReceiveVehicles");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TransportCollection", b =>
                {
                    b.Property<long>("TransportCollectionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargoType");

                    b.Property<long?>("ClearningAgentCode");

                    b.Property<long?>("ConsigneeCode");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long?>("GoodHeadCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("IsoCodeHeadCode");

                    b.Property<long?>("PortAndTerminalCode");

                    b.Property<long?>("ShipperCode");

                    b.Property<string>("ShippingagentCode");

                    b.Property<string>("TransportCollectionName");

                    b.HasKey("TransportCollectionId");

                    b.ToTable("TransportCollection");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TransportCollectionTariff", b =>
                {
                    b.Property<long>("TransportCollectionTariffId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long>("TariffId");

                    b.Property<long>("TransportCollectionId");

                    b.HasKey("TransportCollectionTariffId");

                    b.HasIndex("TariffId");

                    b.HasIndex("TransportCollectionId");

                    b.ToTable("TransportCollectionTariff");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Transporter", b =>
                {
                    b.Property<long>("TransporterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("TransporterName");

                    b.Property<string>("VehicleNumber");

                    b.HasKey("TransporterId");

                    b.ToTable("Transporter");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TruckInOut", b =>
                {
                    b.Property<long>("TruckInOutId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNumber");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("IndexNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("TIP");

                    b.Property<DateTime?>("TruckEntryDate");

                    b.Property<DateTime?>("TruckInDate");

                    b.Property<string>("TruckNo");

                    b.Property<bool>("TruckOut");

                    b.Property<DateTime?>("TruckOutDate");

                    b.Property<string>("Type");

                    b.Property<DateTime?>("ValidTo");

                    b.Property<string>("VirNumber");

                    b.HasKey("TruckInOutId");

                    b.ToTable("TruckInOut");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TTSO", b =>
                {
                    b.Property<long>("TTSOId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNo");

                    b.Property<string>("Category");

                    b.Property<string>("ContainerNo");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<int?>("IndexNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsProcessed");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("OpType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequenceNo");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNo");

                    b.Property<double?>("Weight");

                    b.HasKey("TTSOId");

                    b.ToTable("TTSO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNIC");

                    b.Property<long?>("CompanyId");

                    b.Property<string>("ContactNo");

                    b.Property<DateTime?>("DateOfBirth");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("IdentityUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<long?>("ShippingAgentExportId");

                    b.Property<long?>("ShippingAgentId");

                    b.Property<bool?>("Status");

                    b.HasKey("UserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IdentityUserId");

                    b.HasIndex("ShippingAgentExportId");

                    b.HasIndex("ShippingAgentId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebdocTerminal.Models.UsersEmail", b =>
                {
                    b.Property<long>("UsersEmailId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Department");

                    b.Property<string>("Email");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("UsersEmailId");

                    b.ToTable("UsersEmail");
                });

            modelBuilder.Entity("WebdocTerminal.Models.VAM", b =>
                {
                    b.Property<long>("VAMId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActivityTime");

                    b.Property<string>("ActivityType");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("OperationType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIR_AIRNumber");

                    b.HasKey("VAMId");

                    b.ToTable("VAMs");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Vessel", b =>
                {
                    b.Property<long>("VesselId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("IGM");

                    b.Property<string>("IGMYear");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("VesselName");

                    b.HasKey("VesselId");

                    b.ToTable("Vessel");
                });

            modelBuilder.Entity("WebdocTerminal.Models.VesselExport", b =>
                {
                    b.Property<long>("VesselExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("ShippingLineId");

                    b.Property<string>("VesselName");

                    b.HasKey("VesselExportId");

                    b.HasIndex("ShippingLineId");

                    b.ToTable("VesselExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.VIRO", b =>
                {
                    b.Property<long>("VIROId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BerthAt");

                    b.Property<DateTime?>("BerthOn");

                    b.Property<DateTime?>("CreateDT");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MessageFrom");

                    b.Property<string>("MessageTo");

                    b.Property<string>("OPType");

                    b.Property<DateTime?>("Performed");

                    b.Property<int?>("RecordSequence");

                    b.Property<int?>("TotalRecords");

                    b.Property<string>("VIRNumber");

                    b.Property<string>("VesselName");

                    b.Property<string>("Voyage");

                    b.HasKey("VIROId");

                    b.ToTable("VIRO");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Voyage", b =>
                {
                    b.Property<long>("VoyageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BerthAt");

                    b.Property<DateTime?>("BerthOn");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("VIRNo");

                    b.Property<long?>("VesselId");

                    b.Property<string>("VoyageNo");

                    b.HasKey("VoyageId");

                    b.HasIndex("VesselId");

                    b.ToTable("Voyage");
                });

            modelBuilder.Entity("WebdocTerminal.Models.VoyageExport", b =>
                {
                    b.Property<long>("VoyageExportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CutOff");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<DateTime>("ETA");

                    b.Property<DateTime>("ETD");

                    b.Property<string>("EgmNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<long?>("PortAndTerminalExportId");

                    b.Property<long?>("PortAndTerminalId");

                    b.Property<long?>("VesselExportId");

                    b.Property<string>("VirNumber");

                    b.Property<string>("VoyageNumber");

                    b.HasKey("VoyageExportId");

                    b.HasIndex("PortAndTerminalExportId");

                    b.HasIndex("PortAndTerminalId");

                    b.HasIndex("VesselExportId");

                    b.ToTable("VoyageExport");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Waiver", b =>
                {
                    b.Property<long>("WaiverId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CYContainerId");

                    b.Property<long?>("ContainerIndexId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<string>("Description");

                    b.Property<double>("Discount");

                    b.Property<bool>("InvoiceCreated");

                    b.Property<long?>("InvoiceNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsWaive");

                    b.Property<string>("Remarks");

                    b.Property<double>("TariffAmount");

                    b.Property<double>("TariffHeadAmount");

                    b.Property<string>("WaiverNumber");

                    b.HasKey("WaiverId");

                    b.ToTable("Waiver");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Weighment", b =>
                {
                    b.Property<long>("WeighmentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContainerIndexId");

                    b.Property<long?>("CyContainerId");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<double?>("FoundWeight");

                    b.Property<double?>("GrossWeight");

                    b.Property<string>("HandlingCode");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("WeighmentDate");

                    b.HasKey("WeighmentId");

                    b.HasIndex("ContainerIndexId")
                        .IsUnique()
                        .HasFilter("[ContainerIndexId] IS NOT NULL");

                    b.HasIndex("CyContainerId");

                    b.ToTable("Weighments");
                });

            modelBuilder.Entity("WebdocTerminal.Models.WorkOrderCSD", b =>
                {
                    b.Property<long>("WorkOrderCSDId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CFS20");

                    b.Property<long>("CFS40");

                    b.Property<long>("CFS45");

                    b.Property<long>("CY20");

                    b.Property<long>("CY40");

                    b.Property<long>("CY45");

                    b.Property<DateTime>("DeleteDate");

                    b.Property<long>("DocumentAmount");

                    b.Property<long>("EntryAmount");

                    b.Property<string>("IGM");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remarks");

                    b.Property<long>("SealAmount");

                    b.Property<DateTime>("WorkOrderDate");

                    b.Property<long>("WorkOrderNumber");

                    b.HasKey("WorkOrderCSDId");

                    b.ToTable("WorkOrderCSD");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.AmountReceived", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Invoice", "Invoice")
                        .WithMany("AmountReceiveds")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("WebdocTerminal.Models.Party", "Party")
                        .WithMany("AmountReciveds")
                        .HasForeignKey("PartyId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AmountReceivedExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.InvoiceExport", "InvoiceExport")
                        .WithMany("AmountReceivedExports")
                        .HasForeignKey("InvoiceExportId");

                    b.HasOne("WebdocTerminal.Models.PartyExport", "PartyExport")
                        .WithMany("AmountReceivedExports")
                        .HasForeignKey("PartyExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AppPageItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.AppPage", "AppPage")
                        .WithMany()
                        .HasForeignKey("AppPageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Auction", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bidder", "Bidder")
                        .WithMany()
                        .HasForeignKey("BidderId");

                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithOne("Auction")
                        .HasForeignKey("WebdocTerminal.Models.Auction", "CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithOne("Auction")
                        .HasForeignKey("WebdocTerminal.Models.Auction", "ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.AutoExaminationCharge", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ExaminationCharge", "ExaminationCharge")
                        .WithMany()
                        .HasForeignKey("ExaminationChargeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.BRT", b =>
                {
                    b.HasOne("WebdocTerminal.Models.BRTLocation", "BRTLocation")
                        .WithMany()
                        .HasForeignKey("BRTLocationId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithOne("BRT")
                        .HasForeignKey("WebdocTerminal.Models.BRT", "ContainerIndexId");

                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CyContainerId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.BrtItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.BRT", "BRT")
                        .WithMany("BrtItems")
                        .HasForeignKey("BRTId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Cargo", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CargoReceived")
                        .WithMany("Cargos")
                        .HasForeignKey("CargoReceivedId");

                    b.HasOne("WebdocTerminal.Models.Commodity", "Commodity")
                        .WithMany("Cargos")
                        .HasForeignKey("CommodityId");

                    b.HasOne("WebdocTerminal.Models.ExportContainer", "ExportContainer")
                        .WithMany("Cargos")
                        .HasForeignKey("ExportContainerId");

                    b.HasOne("WebdocTerminal.Models.LoadingProgramDetail", "LoadingProgramDetail")
                        .WithOne("Cargo")
                        .HasForeignKey("WebdocTerminal.Models.Cargo", "LoadingProgramDetailId");

                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.VesselExport", "VesselExport")
                        .WithMany("Cargos")
                        .HasForeignKey("VesselExportId");

                    b.HasOne("WebdocTerminal.Models.VoyageExport", "VoyageExport")
                        .WithMany("Cargos")
                        .HasForeignKey("VoyageExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CargoReceived", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgentExport", "ClearingAgentExport")
                        .WithMany("CargoReceiveds")
                        .HasForeignKey("ClearingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.LoadingProgram", "LoadingProgram")
                        .WithMany("CargoReceiveds")
                        .HasForeignKey("LoadingProgramId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CargoRollOver", b =>
                {
                    b.HasOne("WebdocTerminal.Models.VesselExport", "VesselExport")
                        .WithMany("CargoRollOvers")
                        .HasForeignKey("VesselExportId");

                    b.HasOne("WebdocTerminal.Models.VoyageExport", "VoyageExport")
                        .WithMany("CargoRollOvers")
                        .HasForeignKey("VoyageExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ChequeRecived", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany("chequeReciveds")
                        .HasForeignKey("BankId");

                    b.HasOne("WebdocTerminal.Models.Party", "Party")
                        .WithMany("chequeReciveds")
                        .HasForeignKey("PartyId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ChequeRecivedExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany("ChequeRecivedExports")
                        .HasForeignKey("BankId");

                    b.HasOne("WebdocTerminal.Models.PartyExport", "PartyExport")
                        .WithMany("ChequeRecivedExports")
                        .HasForeignKey("PartyExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ContainerIndex", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId");

                    b.HasOne("WebdocTerminal.Models.GatePass", "OrderDetail")
                        .WithMany()
                        .HasForeignKey("OrderDetailGatePassId");

                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "Shipping")
                        .WithMany()
                        .HasForeignKey("ShippingLineId");

                    b.HasOne("WebdocTerminal.Models.Transporter", "Transporter")
                        .WithMany()
                        .HasForeignKey("TransporterId");

                    b.HasOne("WebdocTerminal.Models.Voyage", "Voyage")
                        .WithMany("ContainerIndices")
                        .HasForeignKey("VoyageId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ContainerIndexTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany("ContainerIndexTariffs")
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany("ContainerIndexTariffs")
                        .HasForeignKey("ContainerIndexId");

                    b.HasOne("WebdocTerminal.Models.Tariff", "Tariff")
                        .WithMany("ContainerIndexTariffs")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.CreditAllowRefoundSettlement", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CreditToCustomer", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithMany()
                        .HasForeignKey("EnteringCargoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.CustomerNOC", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgentExport", "ShippingAgentExport")
                        .WithMany("CustomerNOCs")
                        .HasForeignKey("ShippingAgentExportBId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.CYContainer", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId");

                    b.HasOne("WebdocTerminal.Models.GatePass", "OrderDetail")
                        .WithMany()
                        .HasForeignKey("OrderDetailGatePassId");

                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "Shipping")
                        .WithMany()
                        .HasForeignKey("ShippingLineId");

                    b.HasOne("WebdocTerminal.Models.Transporter", "Transporter")
                        .WithMany()
                        .HasForeignKey("TransporterId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DeliveryOrder", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany("DeliveryOrders")
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany("DeliveryOrders")
                        .HasForeignKey("ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DestuffedContainer", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithOne("DestuffedContainer")
                        .HasForeignKey("WebdocTerminal.Models.DestuffedContainer", "ContainerIndexId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.TellySheet", "TellySheet")
                        .WithMany("DestuffedContainers")
                        .HasForeignKey("TellySheetId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DisabledAgentTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany("DisabledAgentTariffs")
                        .HasForeignKey("ContainerIndexId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgentTariff", "ShippingAgentTariff")
                        .WithMany("DisabledAgentTariffs")
                        .HasForeignKey("ShippingAgentTariffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.DisabledAgentTariffCY", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany("DisabledAgentTariffCYs")
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgentTariff", "ShippingAgentTariff")
                        .WithMany("DisabledAgentTariffCYs")
                        .HasForeignKey("ShippingAgentTariffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.DisabledAgentTariffExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithMany()
                        .HasForeignKey("EnteringCargoId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgentTariffExport", "ShippingAgentTariffExport")
                        .WithMany()
                        .HasForeignKey("ShippingAgentTariffExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.DOCodeItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.DeliveryOrder", "DeliveryOrder")
                        .WithMany("DOCodeItems")
                        .HasForeignKey("DeliveryOrderId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DOItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.GatePassAuction", "GatePassAuction")
                        .WithMany("DOItems")
                        .HasForeignKey("GatePassAuctionId");

                    b.HasOne("WebdocTerminal.Models.GatePassExport", "GatePassExport")
                        .WithMany()
                        .HasForeignKey("GatePassExportId");

                    b.HasOne("WebdocTerminal.Models.GatePass", "GatePass")
                        .WithMany("DOItems")
                        .HasForeignKey("GatePassId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.DOItemExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.GatePassExport", "GatePassExport")
                        .WithMany("DOItemExports")
                        .HasForeignKey("GatePassExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EDOHold", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerDelivered", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.EmptyContainerReceived", "EmptyContainerReceived")
                        .WithMany()
                        .HasForeignKey("EmptyContainerReceivedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.OffHireLocation", "OffHireLocation")
                        .WithMany()
                        .HasForeignKey("OffHireLocationId");

                    b.HasOne("WebdocTerminal.Models.RandDClerk", "RandDClerk")
                        .WithMany()
                        .HasForeignKey("RandDClerkId");

                    b.HasOne("WebdocTerminal.Models.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "ShippingLine")
                        .WithMany()
                        .HasForeignKey("ShippingLineId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerDeliveryOrder", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EmptyContainerReceived", "EmptyContainerReceived")
                        .WithMany()
                        .HasForeignKey("EmptyContainerReceivedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerGatePass", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerInvoice", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EmptyContainerReceived", "EmptyContainerReceived")
                        .WithMany()
                        .HasForeignKey("EmptyContainerReceivedId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerInvoiceItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EmptyContainerInvoice", "EmptyContainerInvoice")
                        .WithMany("EmptyContainerInvoiceItems")
                        .HasForeignKey("EmptyContainerInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerReceived", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgent", "ClearingAgent")
                        .WithMany()
                        .HasForeignKey("ClearingAgentId");

                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.ISOCodeHead", "ISOCodeHead")
                        .WithMany()
                        .HasForeignKey("ISOCodeHeadId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "ShippingLine")
                        .WithMany()
                        .HasForeignKey("ShippingLineId");

                    b.HasOne("WebdocTerminal.Models.Transporter", "Transporter")
                        .WithMany()
                        .HasForeignKey("TransporterId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerStorageSlab", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EmptyContainerTariff", "EmptyContainerTariff")
                        .WithMany("EmptyContainerStorageSlabs")
                        .HasForeignKey("EmptyContainerTariffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyContainerTaxAndFreeDay", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyGateOutContainer", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany("EmptyGateOutContainers")
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.Transporter", "Transporter")
                        .WithMany()
                        .HasForeignKey("TransporterId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EmptyReceiving", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgentExport", "ShippingAgentExport")
                        .WithMany("EmptyReceivings")
                        .HasForeignKey("ShippingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "ShippingLine")
                        .WithMany("EmptyReceivings")
                        .HasForeignKey("ShippingLineId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.EnteringCargo", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgentExport")
                        .WithMany("EnteringCargos")
                        .HasForeignKey("ClearingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.LoadingProgram", "LoadingProgram")
                        .WithMany()
                        .HasForeignKey("LoadingProgramId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationChargeAssign", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationRequest", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ClearingAgent", "ClearingAgent")
                        .WithMany()
                        .HasForeignKey("ClearingAgentId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ExaminationCharge", "ExaminationCharge")
                        .WithMany()
                        .HasForeignKey("ExaminationChargeId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationTariffInformation", b =>
                {
                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExaminationTariffInformationTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ExaminationTariff", "ExaminationTariff")
                        .WithMany()
                        .HasForeignKey("ExaminationTariffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.ExaminationTariffInformation", "ExaminationTariffInformation")
                        .WithMany("ExaminationTariffInformationTariffs")
                        .HasForeignKey("ExaminationTariffInformationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExcessAmountRefundSettlement", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportBRT", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ExportCargo", "ExportCargo")
                        .WithMany("ExportBRTs")
                        .HasForeignKey("ExportCargoId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportCargo", b =>
                {
                    b.HasOne("WebdocTerminal.Models.LoadingProgram", "LoadingProgram")
                        .WithOne("ExportCargo")
                        .HasForeignKey("WebdocTerminal.Models.ExportCargo", "LoadingProgramId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportContainer", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgentExport", "ShippingAgentExport")
                        .WithMany()
                        .HasForeignKey("ShippingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.ShippingLineExport", "ShippingLineExport")
                        .WithMany("ExportContainers")
                        .HasForeignKey("ShippingLineExportId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine")
                        .WithMany("ExportContainers")
                        .HasForeignKey("ShippingLineId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportContainerItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ExportContainer", "ExportContainer")
                        .WithMany("ExportContainerItems")
                        .HasForeignKey("ExportContainerId");

                    b.HasOne("WebdocTerminal.Models.Shipper", "Shipper")
                        .WithMany("ExportContainerItems")
                        .HasForeignKey("ShipperId");

                    b.HasOne("WebdocTerminal.Models.VesselExport", "VesselExport")
                        .WithMany()
                        .HasForeignKey("VesselExportId");

                    b.HasOne("WebdocTerminal.Models.VoyageExport", "VoyageExport")
                        .WithMany()
                        .HasForeignKey("VoyageExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportDeliveryOrder", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithMany()
                        .HasForeignKey("EnteringCargoId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportGroundedCargo", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithOne("ExportGroundedCargo")
                        .HasForeignKey("WebdocTerminal.Models.ExportGroundedCargo", "EnteringCargoId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ExportVehicle", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithMany("ExportVehicles")
                        .HasForeignKey("EnteringCargoId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateIn", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany("GateIns")
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateOut", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithOne("GateOut")
                        .HasForeignKey("WebdocTerminal.Models.GateOut", "CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithOne("GateOut")
                        .HasForeignKey("WebdocTerminal.Models.GateOut", "ContainerIndexId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent")
                        .WithMany("GateOuts")
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GateoutExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.PortAndTerminal")
                        .WithMany("GateoutExports")
                        .HasForeignKey("PortAndTerminalId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePass", b =>
                {
                    b.HasOne("WebdocTerminal.Models.DeliveryOrder", "DeliveryOrder")
                        .WithMany("GatePasses")
                        .HasForeignKey("DeliveryOrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.RandDClerk", "RandDClerk")
                        .WithMany()
                        .HasForeignKey("RandDClerkId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePassAuction", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePassExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ExportDeliveryOrder", "DeliveryOrder")
                        .WithMany("GatePasses")
                        .HasForeignKey("ExportDeliveryOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.GatePassSample", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDHold", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithOne("GDHold")
                        .HasForeignKey("WebdocTerminal.Models.GDHold", "EnteringCargoId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GDTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithMany("GDTariffs")
                        .HasForeignKey("EnteringCargoId");

                    b.HasOne("WebdocTerminal.Models.TariffExport", "TariffExport")
                        .WithMany("GDTariffs")
                        .HasForeignKey("TariffExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.Good", b =>
                {
                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.GroundedContainer", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithOne("GroundedContainer")
                        .HasForeignKey("WebdocTerminal.Models.GroundedContainer", "ContainerIndexId");

                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CyContainerId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.GroundedDays", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.GroundingFreeDay", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgent", "ClearingAgent")
                        .WithMany()
                        .HasForeignKey("ClearingAgentId");

                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Hold", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany("Holds")
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany("Holds")
                        .HasForeignKey("ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Invoice", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ClearingAgent", "ClearingAgent")
                        .WithMany()
                        .HasForeignKey("ClearingAgentId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceDocument", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Invoice", "Invoice")
                        .WithMany("InvoiceDocuments")
                        .HasForeignKey("InvoiceId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceDocumentExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.InvoiceExport", "InvoiceExport")
                        .WithMany("InvoiceDocumentExports")
                        .HasForeignKey("InvoiceExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgentExport", "ClearingAgentExport")
                        .WithMany("InvoiceExports")
                        .HasForeignKey("ClearingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.EnteringCargo", "EnteringCargo")
                        .WithMany()
                        .HasForeignKey("EnteringCargoId");

                    b.HasOne("WebdocTerminal.Models.VesselExport", "VesselExport")
                        .WithMany()
                        .HasForeignKey("VesselExportId");

                    b.HasOne("WebdocTerminal.Models.VoyageExport", "VoyageExport")
                        .WithMany()
                        .HasForeignKey("VoyageExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceInquiry", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithMany()
                        .HasForeignKey("ContainerIndexId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Invoice", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.InvoiceItemExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.InvoiceExport", "InvoiceExport")
                        .WithMany("InvoiceItemExports")
                        .HasForeignKey("InvoiceExportId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.TariffExport", "TariffExport")
                        .WithMany()
                        .HasForeignKey("TariffExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ISOCode", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ISOCodeHead", "ISOCodeHead")
                        .WithMany()
                        .HasForeignKey("ISOCodeHeadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.LineSealAmount", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.LoadingProgram", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgentExport", "ClearingAgentExport")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("ClearingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.NatureOfTariff", "NatureOfTariff")
                        .WithMany()
                        .HasForeignKey("NatureOfTariffId");

                    b.HasOne("WebdocTerminal.Models.PortAndTerminal")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.Shipper", "Shipper")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("ShipperId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgentExport", "ShippingAgentExport")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("ShippingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.ShippingLineExport", "ShippingLineExport")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("ShippingLineExportId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("ShippingLineId");

                    b.HasOne("WebdocTerminal.Models.VesselExport", "VesselExport")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("VesselExportId");

                    b.HasOne("WebdocTerminal.Models.VoyageExport", "VoyageExport")
                        .WithMany("LoadingPrograms")
                        .HasForeignKey("VoyageExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.LoadingProgramDetail", b =>
                {
                    b.HasOne("WebdocTerminal.Models.LoadingProgram", "LoadingProgram")
                        .WithMany("LoadingProgramDetails")
                        .HasForeignKey("LoadingProgramId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ManualGatePass", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId");

                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "Containerindex")
                        .WithMany()
                        .HasForeignKey("ContainerindexId");

                    b.HasOne("WebdocTerminal.Models.RandDClerk", "RandDClerk")
                        .WithMany()
                        .HasForeignKey("RandDClerkId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Party", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgent", "ClearingAgent")
                        .WithMany()
                        .HasForeignKey("ClearingAgentId");

                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "ShippingLine")
                        .WithMany()
                        .HasForeignKey("ShippingLineId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PartyLedger", b =>
                {
                    b.HasOne("WebdocTerminal.Models.AmountReceived", "AmountReceived")
                        .WithMany("PartyLedgers")
                        .HasForeignKey("AmountReceivedId");

                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany("PartyLedgers")
                        .HasForeignKey("BankId");

                    b.HasOne("WebdocTerminal.Models.ChequeRecived", "ChequeRecived")
                        .WithMany("PartyLedgers")
                        .HasForeignKey("ChequeRecivedId");

                    b.HasOne("WebdocTerminal.Models.Party", "Party")
                        .WithMany("PartyLedgers")
                        .HasForeignKey("PartyId");

                    b.HasOne("WebdocTerminal.Models.RefundAmount", "RefundAmount")
                        .WithMany("PartyLedgers")
                        .HasForeignKey("RefundAmountId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PartyLedgerExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.AmountReceivedExport", "AmountReceivedExport")
                        .WithMany("PartyLedgerExports")
                        .HasForeignKey("AmountReceivedExportId");

                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany("PartyLedgerExports")
                        .HasForeignKey("BankId");

                    b.HasOne("WebdocTerminal.Models.ChequeRecivedExport", "ChequeRecivedExport")
                        .WithMany("PartyLedgerExports")
                        .HasForeignKey("ChequeRecivedExportId");

                    b.HasOne("WebdocTerminal.Models.PartyExport", "PartyExport")
                        .WithMany("PartyLedgerExports")
                        .HasForeignKey("PartyExportId");

                    b.HasOne("WebdocTerminal.Models.RefundAmountExport", "RefundAmountExport")
                        .WithMany("PartyLedgerExports")
                        .HasForeignKey("RefundAmountExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PaymentReceived", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PaymentUpdateDetail", b =>
                {
                    b.HasOne("WebdocTerminal.Models.PaymentUpdate", "PaymentUpdate")
                        .WithMany("PaymentUpdateDetails")
                        .HasForeignKey("PaymentUpdateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.PreAlterDetail", "PreAlterDetail")
                        .WithMany()
                        .HasForeignKey("PreAlterDetailId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "ShippingLine")
                        .WithMany()
                        .HasForeignKey("ShippingLineId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Permission", b =>
                {
                    b.HasOne("WebdocTerminal.Models.AppPage", "AppPage")
                        .WithMany("Permissions")
                        .HasForeignKey("AppPageId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlert", b =>
                {
                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.PreAlertVessel", "PreAlertVessel")
                        .WithMany()
                        .HasForeignKey("PreAlertVesselId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlertPayOrderDetail", b =>
                {
                    b.HasOne("WebdocTerminal.Models.BankBranch", "BankBranch")
                        .WithMany()
                        .HasForeignKey("BankBranchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.PreAlertPayOrder", "PreAlertPayOrder")
                        .WithMany("PreAlertPayOrderDetails")
                        .HasForeignKey("PreAlertPayOrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.PreAlterDetail", b =>
                {
                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.PreAlert", "PreAlert")
                        .WithMany("PreAlterDetails")
                        .HasForeignKey("PreAlertId");

                    b.HasOne("WebdocTerminal.Models.ShippingLine", "ShippingLine")
                        .WithMany()
                        .HasForeignKey("ShippingLineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.RefundAmount", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany("RefundAmounts")
                        .HasForeignKey("BankId");

                    b.HasOne("WebdocTerminal.Models.PartyExport", "PartyExport")
                        .WithMany("RefundAmounts")
                        .HasForeignKey("PartyExportId");

                    b.HasOne("WebdocTerminal.Models.Party", "Party")
                        .WithMany("RefundAmounts")
                        .HasForeignKey("PartyId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.RefundAmountExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId");

                    b.HasOne("WebdocTerminal.Models.PartyExport", "PartyExport")
                        .WithMany()
                        .HasForeignKey("PartyExportId");

                    b.HasOne("WebdocTerminal.Models.PartyExport", "Party")
                        .WithMany()
                        .HasForeignKey("PartyId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ReturnToYard", b =>
                {
                    b.HasOne("WebdocTerminal.Models.EmptyGateOutContainer", "EmptyGateOutContainer")
                        .WithMany()
                        .HasForeignKey("EmptyGateOutContainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.ScheduleOfChargeItem", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ScheduleOfCharge", "ScheduleOfCharge")
                        .WithMany("ScheduleOfChargeItems")
                        .HasForeignKey("ScheduleOfChargeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.SealIssue", b =>
                {
                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CYContainerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.ServicesInfo", b =>
                {
                    b.HasOne("WebdocTerminal.Models.NatureOfPayment", "NatureOfPayment")
                        .WithMany()
                        .HasForeignKey("NatureOfPaymentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.ServicesSection", "ServicesSection")
                        .WithMany()
                        .HasForeignKey("ServicesSectionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.ServicesType", "ServicesType")
                        .WithMany()
                        .HasForeignKey("ServicesTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgent", b =>
                {
                    b.HasOne("WebdocTerminal.Models.MasterShippingAgent", "MasterShippingAgent")
                        .WithMany()
                        .HasForeignKey("MasterShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgentExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.NatureOfTariff", "NatureOfTariff")
                        .WithMany()
                        .HasForeignKey("NatureOfTariffId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgentTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany("ShippingAgentTariffs")
                        .HasForeignKey("ShippingAgentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.TariffExport")
                        .WithMany("ShippingAgentTariffs")
                        .HasForeignKey("TariffExportId");

                    b.HasOne("WebdocTerminal.Models.Tariff", "Tariff")
                        .WithMany("ShippingAgentTariffs")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.ShippingAgentTariffExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgentExport", "ShippingAgentExport")
                        .WithMany("ShippingAgentTariffExports")
                        .HasForeignKey("ShippingAgentExportId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.TariffExport", "TariffExport")
                        .WithMany()
                        .HasForeignKey("TariffExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.StorageFreeDay", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgent", "ClearingAgent")
                        .WithMany()
                        .HasForeignKey("ClearingAgentId");

                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId");

                    b.HasOne("WebdocTerminal.Models.ISOCodeHead", "ISOCodeHead")
                        .WithMany()
                        .HasForeignKey("ISOCodeHeadId");

                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");

                    b.HasOne("WebdocTerminal.Models.Tariff", "Tariff")
                        .WithMany()
                        .HasForeignKey("TariffId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.StorageSlab", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Tariff", "Tariff")
                        .WithMany("StorageSlabs")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.StorageSlabExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.TariffExport", "TariffExport")
                        .WithMany("StorageSlabExports")
                        .HasForeignKey("TariffExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.Tariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.TariffHead", "TariffHead")
                        .WithMany("Tariffs")
                        .HasForeignKey("TariffHeadId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.NatureOfTariff", "NatureOfTariff")
                        .WithMany()
                        .HasForeignKey("NatureOfTariffId");

                    b.HasOne("WebdocTerminal.Models.TariffHeadExport", "TariffHeadExport")
                        .WithMany("TariffExports")
                        .HasForeignKey("TariffHeadExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffInformation", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgent", "ClearingAgent")
                        .WithMany()
                        .HasForeignKey("ClearingAgentId");

                    b.HasOne("WebdocTerminal.Models.Consigne", "Consigne")
                        .WithMany()
                        .HasForeignKey("ConsigneId");

                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId");

                    b.HasOne("WebdocTerminal.Models.ISOCodeHead", "ISOCodeHead")
                        .WithMany()
                        .HasForeignKey("ISOCodeHeadId");

                    b.HasOne("WebdocTerminal.Models.PortAndTerminal", "PortAndTerminal")
                        .WithMany()
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.Shipper", "Shipper")
                        .WithMany()
                        .HasForeignKey("ShipperId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffInofrmationTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ExaminationTariff")
                        .WithMany("TariffInofrmationTariffs")
                        .HasForeignKey("ExaminationTariffId");

                    b.HasOne("WebdocTerminal.Models.Tariff", "Tariff")
                        .WithMany("TariffInofrmationTariffs")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.TariffInformation", "TariffInformation")
                        .WithMany("TariffInofrmationTariffs")
                        .HasForeignKey("TariffInformationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffPercentage", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.TariffHead", "TariffHead")
                        .WithMany()
                        .HasForeignKey("TariffHeadId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.TariffRateSlabWise", b =>
                {
                    b.HasOne("WebdocTerminal.Models.TariffExport", "TariffExport")
                        .WithMany("TariffRateSlabWises")
                        .HasForeignKey("TariffExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.TellySheet", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany("TellySheets")
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TerminalAndFFShareRate", b =>
                {
                    b.HasOne("WebdocTerminal.Models.GoodsHead", "GoodsHead")
                        .WithMany()
                        .HasForeignKey("GoodsHeadId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany()
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TPCargoDetails", b =>
                {
                    b.HasOne("WebdocTerminal.Models.LoadingProgram", "LoadingProgram")
                        .WithMany()
                        .HasForeignKey("LoadingProgramId");

                    b.HasOne("WebdocTerminal.Models.TPReceiveVehicle", "TPReceiveVehicle")
                        .WithMany()
                        .HasForeignKey("TPReceiveVehicleId");

                    b.HasOne("WebdocTerminal.Models.VesselExport", "VesselExport")
                        .WithMany()
                        .HasForeignKey("VesselExportId");

                    b.HasOne("WebdocTerminal.Models.VoyageExport", "VoyageExport")
                        .WithMany()
                        .HasForeignKey("VoyageExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.TPReceiveVehicle", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ClearingAgentExport", "ClearingAgentExport")
                        .WithMany()
                        .HasForeignKey("ClearingAgentExportId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.TransportCollectionTariff", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Tariff", "Tariff")
                        .WithMany("TransportCollectionTariffs")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebdocTerminal.Models.TransportCollection", "TransportCollection")
                        .WithMany("TransportCollectionTariffs")
                        .HasForeignKey("TransportCollectionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebdocTerminal.Models.User", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("IdentityUserId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgentExport", "ShippingAgentExport")
                        .WithMany("Users")
                        .HasForeignKey("ShippingAgentExportId");

                    b.HasOne("WebdocTerminal.Models.ShippingAgent", "ShippingAgent")
                        .WithMany("Users")
                        .HasForeignKey("ShippingAgentId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.VesselExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ShippingLine", "ShippingLine")
                        .WithMany("VesselExports")
                        .HasForeignKey("ShippingLineId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Voyage", b =>
                {
                    b.HasOne("WebdocTerminal.Models.Vessel", "Vessel")
                        .WithMany("Voyages")
                        .HasForeignKey("VesselId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.VoyageExport", b =>
                {
                    b.HasOne("WebdocTerminal.Models.PortAndTerminalExport", "PortAndTerminalExport")
                        .WithMany("VoyageExports")
                        .HasForeignKey("PortAndTerminalExportId");

                    b.HasOne("WebdocTerminal.Models.PortAndTerminal")
                        .WithMany("VoyageExports")
                        .HasForeignKey("PortAndTerminalId");

                    b.HasOne("WebdocTerminal.Models.VesselExport", "VesselExport")
                        .WithMany("VoyageExports")
                        .HasForeignKey("VesselExportId");
                });

            modelBuilder.Entity("WebdocTerminal.Models.Weighment", b =>
                {
                    b.HasOne("WebdocTerminal.Models.ContainerIndex", "ContainerIndex")
                        .WithOne("Weighment")
                        .HasForeignKey("WebdocTerminal.Models.Weighment", "ContainerIndexId");

                    b.HasOne("WebdocTerminal.Models.CYContainer", "CYContainer")
                        .WithMany()
                        .HasForeignKey("CyContainerId");
                });
#pragma warning restore 612, 618
        }
    }
}
