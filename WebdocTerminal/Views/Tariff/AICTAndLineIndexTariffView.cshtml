
@{
    var agents = (IEnumerable<SelectListItem>)ViewData["ShippingAgents"];
    var goodsHead = (IEnumerable<SelectListItem>)ViewData["GoodsHead"];
}
<script src="~/js/app.js/AICTAndLineIndexTariffView.js"></script>

<style>

    #CargoInformation {
        max-height: 750px;
    }

    .my-class {
        background-color: #4b5f71;
        color: white;
    }

    .newbox {
        text-align: center;
        padding: 3px 0px 3px 0px;
        font-size: 14px;
        font-weight: 600;
        margin: -3px -10px 10px -10px;
        color: white;
        background: #2a3f54;
        border-bottom: 1px solid #d1d1d1;
    }

    #error {
        visibility: hidden;
        width: 200px;
        background-color: #d25656;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        z-index: 1;
        font-size: 17px;
    }

        #error.show {
            visibility: visible;
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }

    .dx-header-row > td > .dx-datagrid-text-content {
        white-space: normal;
        vertical-align: top;
        text-align: center;
    }

    .myClass {
        background-color: #73cbad4f;
        color: black;
    }

    .dx-scrollbar-vertical .dx-scrollbar-hoverable {
        width: 30px !important;
         
    }

    .dx-scrollbar-vertical .dx-scrollable-scroll {
        width: 30px !important; 
    }

    .dx-scrollbar-horizontal .dx-scrollbar-hoverable .dx-state-hover {
        height: 480px !important;
    }

    .dx-scrollbar-horizontal .dx-scrollable-scroll .dx-state-hover {
        height: 480px !important;
    }
    .dx-scrollbar-horizontal .dx-scrollable-scroll .dx-state-hover {
        height: 480px !important;
    } 
</style>


<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.3/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/exceljs/4.1.1/exceljs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.2/FileSaver.min.js"></script>



<style>
    .newbox {
        text-align: center;
        padding: 3px 0px 3px 0px;
        font-size: 14px;
        font-weight: 600;
        margin: -3px -10px 10px -10px;
        color: white;
        background: #2a3f54;
        border-bottom: 1px solid #d1d1d1;
    }
</style>



<div class="right_col" role="main">
    <div class="page-title">
        <div class="row">
            <div class="col-md-11">
                <div class="title_left">
                    <h3> AICT & Line Index Tariff </h3>
                </div>
            </div>
            <div class="col-md-1">
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">

                <div class="x_content">


                    <div class="row">

                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="item form-group">
                                <label class="control-label col-md-4 col-sm-3 col-xs-12" for="name">
                                    Vir No: <span class="required">*</span>
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @(Html.DevExtreme()
                                                .Autocomplete()
                                                .ID("virnolist")
                                                .DataSource(d => d.Mvc()
                                                .Controller("APICalls")
                                                .Area("")
                                                .LoadAction("Getvirno"))
                                                .Placeholder("Type GDNumber..."))
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="item form-group">
                                <label class="control-label col-md-4 col-sm-3 col-xs-12" for="name">
                                    Container No: <span class="required">*</span>
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @(Html.DevExtreme()
                                                .Autocomplete()
                                                .ID("containerlist")
                                                .DataSource(d => d.Mvc()
                                                .Controller("APICalls")
                                                .Area("")
                                                .LoadAction("Getigmocontainers"))
                                                .Placeholder("Type Container No..."))
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="item form-group">
                                <label class="control-label col-md-4 col-sm-3 col-xs-12" for="name">
                                    Index No: <span class="required">*</span>
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @(Html.DevExtreme()
                                                .Autocomplete()
                                                .ID("containerIndexlist")
                                                .DataSource(d => d.Mvc()
                                                .Controller("APICalls")
                                                .Area("")
                                                .LoadAction("Getigmoindexes"))
                                                .Placeholder("Type Index..."))
                                </div>
                            </div>
                        </div>



                    </div>
                    <div class="row">

                        <div class="col-md-4">
                            <div class="item form-group">
                                <label class="control-label col-md-4" for="name">
                                    Agent Name
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("Name", agents, "Select Agent", new { @class = "form-control select2", @id = "agentdropdown" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="item form-group">
                                <label class="control-label col-md-4" for="name">
                                    Goods Head
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    @Html.DropDownList("Name", goodsHead, "Select Goods Head", new { @class = "form-control select2", @id = "goodsheaddropdown" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-4">

                            <div class="form-group">
                                <label class="control-label  col-md-4" for="first-name">
                                    Status <span class="required">*</span>
                                </label>
                                <div class="col-md-8 col-xs-12">
                                    <select class="form-control" id="type">
                                        <option value="ALL">ALL</option>
                                        <option value="DLV">DLV</option>
                                        <option value="UNDLV">UNDLV</option>
                                    </select>
                                </div>

                            </div>
                        </div>

                    </div>

                    <div class="row">


                        <div class="col-md-4  col-xs-12">
                            <div class="control-group">
                                <div class="controls">
                                    <label class="control-label col-md-4 col-xs-12" for="first-name">
                                        From:
                                    </label>
                                    <div class="col-md-8  col-xs-12">
                                        <input type="date" class="form-control" id="fromdate">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4  col-xs-12">
                            <div class="control-group">
                                <div class="controls">
                                    <label class="control-label col-md-4  col-xs-12" for="first-name">
                                        To:
                                    </label>
                                    <div class="col-md-8  col-xs-12">
                                        <input type="date" class="form-control" id="todate">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <button type="button" class="btn btn-dark" onclick="showcargoDetaildesc()" style=" float: right;"> View Detail</button>
                            </div>
                        </div>
                    </div>

                    
                    <div class="row">
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="item form-group">
                                <label class="control-label col-md-4 col-sm-3 col-xs-12" for="name">
                                    File Select: <span class="required">*</span>
                                </label>
                                <div class="col-md-8 col-sm-8 col-xs-12">
                                    <input type="file" class="form form-control" id="fileUpload" accept=".xls,.xlsx" style=" background-color: beige; color: black;" /><br />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="item form-group">
                                <button type="button" class="btn btn-success" id="uploadExcel">Upload File</button>
                            </div>
                        </div>
                    </div>
                    <div class="ln_solid"></div>

                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <div id="large-indicator"></div>
                            <div id="CargoInformation">

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 col-sm-12 col-xs-12">
                            <button type="button" class="btn btn-success" onclick="SaveInfo()"  style=" float: right; height: 50px; width: 200px;">Save Information</button>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>


 



<script>
    $('.select2').select2();
     
    var selectedFile;
    document
        .getElementById("fileUpload")
        .addEventListener("change", function (event) {
            selectedFile = event.target.files[0];
        });
    document
        .getElementById("uploadExcel")
        .addEventListener("click", function () {

            var resultvalue = true;

            if (selectedFile) {
                var fileReader = new FileReader();
                fileReader.onload = function (event) {
                    var data = event.target.result;

                    var workbook = XLSX.read(data, {
                        type: "binary"
                    });
                    workbook.SheetNames.forEach(sheet => {
                        let rowObject = XLSX.utils.sheet_to_row_object_array(
                            workbook.Sheets[sheet]
                        );
                     
                        if (rowObject) {
                             
                            var newresult = rowObject;

                            newresult.pop();

                            //var newresult = rowObject.filter(c => c.Delivered == 'false');
                           // var deliverdresultdata = rowObject.filter(c => c.Delivered == 'true');
  
                            if (newresult.length) {

                                console.log("ok newresult", newresult)


                                newresult.forEach(c => {


                                    if ($.isNumeric(c.AICTCBM) == false) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge AICT Per CBM Rate in numbers " )
                                    }
                                    if ($.isNumeric(c.AICTIndex) == false) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge AICT Per Index Rate in numbers ")
                                    }
                                    //if ($.isNumeric(c.FFCBM) == false) {
                                    if ($.isNumeric(c.AdditionalFFCBM) == false) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge FF Per CBM Rate in numbers ")
                                    }
                                    //if ($.isNumeric(c.FFIndex) == false) {
                                    if ($.isNumeric(c.AdditionalFFIndex) == false) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge FF Per Index Rate in numbers ")
                                    }
                                    if ($.isNumeric(c.ShareAICTCBM) == false) {
                                        resultvalue = false;
                                        return alert("please add aict Per CBM Rate in numbers ")
                                    }
                                    if ($.isNumeric(c.ShareAICTIndex) == false) {
                                        resultvalue = false;
                                        return alert("please add aict Per Index Rate in numbers ")
                                    }
                                    if ($.isNumeric(c.ShareFFCBM) == false) {
                                        resultvalue = false;
                                        return alert("please add FF Per CBM Rate in numbers ")
                                    }
                                    if ($.isNumeric(c.ShareFFIndex) == false) {
                                        resultvalue = false;
                                        return alert("please add FF Per Index Rate in numbers ")
                                    }


                                    if (c.AICTCBM < 0) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge AICT Per CBM Rate > 0  ")
                                    }
                                    if (c.AICTIndex < 0) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge AICT Per Index Rate > 0 ")
                                    }
                                    //if (c.FFCBM < 0) {
                                    if (c.AdditionalFFCBM < 0) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge FF Per CBM Rate > 0 ")
                                    }
                                    //if (c.FFIndex < 0) {
                                    if (c.AdditionalFFIndex < 0) {
                                        resultvalue = false;
                                        return alert("please add Additional Charge FF Per Index Rate > 0 ")
                                    }
                                    if (c.ShareAICTCBM < 0) {
                                        resultvalue = false;
                                        return alert("please add aict Per CBM Rate > 0 ")
                                    }
                                    if (c.ShareAICTIndex < 0) {
                                        resultvalue = false;
                                        return alert("please add aict Per Index Rate > 0 ")
                                    }
                                    if (c.ShareFFCBM < 0) {
                                        resultvalue = false;
                                        return alert("please add FF Per CBM Rate > 0 ")
                                    }
                                    if (c.ShareFFIndex < 0) {
                                        resultvalue = false;
                                        return alert("please add FF Per Index Rate > 0 ")
                                    }


                                    //var totalcbm = Number(c.AICTCBM) + Number(c.FFCBM) + Number(c.ShareAICTCBM) + Number(c.ShareFFCBM);
                                    var totalcbm = Number(c.AICTCBM) + Number(c.AdditionalFFCBM) + Number(c.ShareAICTCBM) + Number(c.ShareFFCBM);
                                    //var totalindx = Number(c.AICTIndex) + Number(c.FFIndex) + Number(c.ShareAICTIndex) + Number(c.ShareFFIndex);
                                    var totalindx = Number(c.AICTIndex) + Number(c.AdditionalFFIndex) + Number(c.ShareAICTIndex) + Number(c.ShareFFIndex);

                                    console.log("totalcbm", Number(totalcbm));
                                    console.log("totalindx", Number(totalindx));

                                    if (Number(totalcbm) <= 0 && Number(totalindx) <= 0) {

                                        resultvalue = false;
                                        return alert("please add amount in cbm or index in igm " + c.IGM + " index " + c.Index)
                                    }


                                });

                                if (resultvalue == true) {
                                    var result = [];
                                    newresult.forEach(c => {




                                        let x = {

                                            perBoxRate: c.PerBox,
                                            additionalChargeAICTPerCBMRate: c.AICTCBM,
                                            additionalChargeAICTPerIndexRate: c.AICTIndex,
                                            //additionalChargeFFPerCBMRate: c.FFCBM,
                                            additionalChargeFFPerCBMRate: c.AdditionalFFCBM,
                                            //additionalChargeFFPerIndexRate: c.FFIndex,
                                            additionalChargeFFPerIndexRate: c.AdditionalFFIndex,

                                            aictPerCBMRate: c.ShareAICTCBM,
                                            aictPerIndexRate: c.ShareAICTIndex,
                                            ffPerCBMRate: c.ShareFFCBM,
                                            ffPerIndexRate: c.ShareFFIndex,

                                            totalCBMRate: c.TotalCBM,
                                            totalPerIndexRate: c.TotalIndex,

                                            containerNumber: c.Container,
                                            igmNo: c.IGM,
                                            indexNo: c.Index,
                                            higherCBM: c.CBM

                                        };

                                        result.push(x);

                                    });

                                    console.log("result", result)

                                    $.post('/Tariff/UpdateTariffAmountFromExcelSheet', { model: result }, function (data) {

                                        if (data.error == true) {
                                            // showToast(data.message, "error")

                                            alert(data.message)
                                            //  alert(data.message + "and total " + deliverdresultdata.length + "are Delivered")



                                            //var virno = $("#virnolist").dxAutocomplete("instance").option("value")
                                            //var containerno = $("#containerlist").dxAutocomplete("instance").option("value");
                                            //var indexno = $("#containerIndexlist").dxAutocomplete("instance").option("value")
                                            //var agent = $("#agentdropdown").val();

                                            
                                            //listGrid(virno, containerno, indexno, agent);


                                        } else {

                                            alert(data.message)
                                            // alert(data.message + "and total " + deliverdresultdata.length + "are Delivered")
                                            //showToast(, "success");

                                            //var virno = $("#virnolist").dxAutocomplete("instance").option("value")
                                            //var containerno = $("#containerlist").dxAutocomplete("instance").option("value");
                                            //var indexno = $("#containerIndexlist").dxAutocomplete("instance").option("value")
                                            //var agent = $("#agentdropdown").val();

                                            //console.log('virno', virno);
                                            //console.log('containerno', containerno);
                                            //console.log('indexno', indexno);
                                            //console.log('agent', agent);

                                            

                                            var virno = result[0].igmNo;
                                            var containerno = "";
                                            var indexno = result[0].indexNo;
                                            var agent = "";
                                            var goodhead = "";

                                            var fromdate = document.getElementById("fromdate").value;
                                            var todate = document.getElementById("todate").value;
                                            var type = document.getElementById("type").value;

                                            console.log('virno', virno);
                                            console.log('containerno', containerno);
                                            console.log('indexno', indexno);
                                            console.log('agent', agent);
                                            console.log('goodhead', goodhead);
                                            listGrid(virno, containerno, indexno, agent, goodhead, type, fromdate, todate);

                                        }

                                    });
                                }
                               
                            }

                        }

 
                    });
                };
                fileReader.readAsBinaryString(selectedFile);
            }
        });

</script>





