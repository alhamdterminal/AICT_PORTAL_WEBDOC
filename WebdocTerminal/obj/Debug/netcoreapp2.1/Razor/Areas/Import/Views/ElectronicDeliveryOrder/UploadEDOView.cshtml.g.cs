#pragma checksum "D:\AICTMAIN_WEBDOCTERMINAL\AICT_DECRYPTED\AICT-Source\WebdocTerminal\Areas\Import\Views\ElectronicDeliveryOrder\UploadEDOView.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "01ebf9c5b21c8e57ea1bb54bb7e61334abac6d6176e14dc07e499a41d2e2d96e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Import_Views_ElectronicDeliveryOrder_UploadEDOView), @"mvc.1.0.view", @"/Areas/Import/Views/ElectronicDeliveryOrder/UploadEDOView.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Import/Views/ElectronicDeliveryOrder/UploadEDOView.cshtml", typeof(AspNetCore.Areas_Import_Views_ElectronicDeliveryOrder_UploadEDOView))]
namespace AspNetCore
{
    #line default
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\AICTMAIN_WEBDOCTERMINAL\AICT_DECRYPTED\AICT-Source\WebdocTerminal\Areas\Import\_ViewImports.cshtml"
using WebdocTerminal

    ;
#line 2 "D:\AICTMAIN_WEBDOCTERMINAL\AICT_DECRYPTED\AICT-Source\WebdocTerminal\Areas\Import\_ViewImports.cshtml"
using WebdocTerminal.Models

    ;
#line 4 "D:\AICTMAIN_WEBDOCTERMINAL\AICT_DECRYPTED\AICT-Source\WebdocTerminal\Areas\Import\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc

    ;
#line 5 "D:\AICTMAIN_WEBDOCTERMINAL\AICT_DECRYPTED\AICT-Source\WebdocTerminal\Areas\Import\_ViewImports.cshtml"
using DevExpress.AspNetCore

#line default
#line hidden
    ;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"01ebf9c5b21c8e57ea1bb54bb7e61334abac6d6176e14dc07e499a41d2e2d96e", @"/Areas/Import/Views/ElectronicDeliveryOrder/UploadEDOView.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"d9c22d530c8a142b4db368d33b9ab0d7e8720da4515d4bce483967cecc7394c6", @"/Areas/Import/_ViewImports.cshtml")]
    public class Areas_Import_Views_ElectronicDeliveryOrder_UploadEDOView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/app.js/UploadEDOView.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(22697, 1459, true);
            WriteLiteral(@"



<style>

    #CargoInformation {
        max-height: 750px;
    }

    .my-class {
        background-color: #4b5f71;
        color: white;
    }

    .newbox {
        text-align: center;
        padding: 3px 0px 3px 0px;
        font-size: 14px;
        font-weight: 600;
        margin: -3px -10px 10px -10px;
        color: white;
        background: #2a3f54;
        border-bottom: 1px solid #d1d1d1;
    }

    #error {
        visibility: hidden;
        width: 200px;
        background-color: #d25656;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 16px;
        z-index: 1;
        font-size: 17px;
    }

        #error.show {
            visibility: visible;
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }

    .dx-header-row > td > .dx-datagrid-text-content {
        white-space: normal;
        vertical-align: top;
        text-a");
            WriteLiteral(@"lign: center;
    }

    .myClass {
        background-color: #73cbad4f;
        color: black;
    }
</style>



<script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.3/xlsx.full.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/exceljs/4.1.1/exceljs.min.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.2/FileSaver.min.js""></script>

");
            EndContext();
            BeginContext(24156, 52, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "01ebf9c5b21c8e57ea1bb54bb7e61334abac6d6176e14dc07e499a41d2e2d96e5855", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(24208, 7210, true);
            WriteLiteral(@"

<style>
    .newbox {
        text-align: center;
        padding: 3px 0px 3px 0px;
        font-size: 14px;
        font-weight: 600;
        margin: -3px -10px 10px -10px;
        color: white;
        background: #2a3f54;
        border-bottom: 1px solid #d1d1d1;
    }
</style>



<div class=""right_col"" role=""main"">
    <div class=""page-title"">
        <div class=""row"">
            <div class=""col-md-11"">
                <div class=""title_left"">
                    <h3> Electronic Delivery Order </h3>
                </div>
            </div>
            <div class=""col-md-1"">
            </div>
        </div>
    </div>
    <div class=""clearfix""></div>
    <div class=""row"">
        <div class=""col-md-12 col-sm-12 col-xs-12"">
            <div class=""x_panel"">

                <div class=""x_content"">



                    <div class=""row"">
                        <div class=""col-md-4 col-sm-4 col-xs-12"">
                            <div class=""item form-group"">
  ");
            WriteLiteral(@"                              <label class=""control-label col-md-4 col-sm-3 col-xs-12"" for=""name"">
                                    File Select: <span class=""required"">*</span>
                                </label>
                                <div class=""col-md-8 col-sm-8 col-xs-12"">
                                    <input multiple type=""file"" class=""form form-control"" id=""fileUpload"" accept="".xls,.xlsx"" style="" background-color: beige; color: black;"" /><br />
                                </div>
                            </div>
                        </div>
                        <div class=""col-md-4 col-sm-4 col-xs-12"">
                            <div class=""item form-group"">
                                <button type=""button"" class=""btn btn-success"" id=""uploadExcel"">Upload File</button>
                            </div>
                        </div>
                    </div>
                    <div class=""ln_solid""></div>

                </div>
            </div>");
            WriteLiteral(@"
        </div>
    </div>
</div>






<script>
    $('.select2').select2();

    var selectedFile;
    var selectedFileitem = [];
    document
        .getElementById(""fileUpload"")
        .addEventListener(""change"", function (event) {
            selectedFile = event.target.files;

        });
    document
        .getElementById(""uploadExcel"")
        .addEventListener(""click"", function () {

            var resultvalue = true;

            if (selectedFile.length) {

                console.log(""test"", selectedFile)

                for (var i = 0; i < selectedFile.length; i++) {
                    selectedFileitem.push(selectedFile[i]);
                }


                console.log(""selectedFileitem"", selectedFileitem)

                if (selectedFileitem.length) {
                    selectedFileitem.forEach(res => {
                        var fileReader = new FileReader();
                        fileReader.onload = function (event) {
                    ");
            WriteLiteral(@"        var data = event.target.result;

                            var workbook = XLSX.read(data, {
                                type: ""binary""
                            });
                            workbook.SheetNames.forEach(sheet => {
                                let rowObject = XLSX.utils.sheet_to_row_object_array(
                                    workbook.Sheets[sheet]
                                );
                                console.log(""rowObject"", rowObject)
                                //do_Date: formatDate(new Date(Date.UTC(0, 0, c.DO_Date - 1))),
                                //valid_Date: formatDate(new Date(Date.UTC(0, 0, c.Valid_Date - 1))),
                                if (rowObject) {

                                    var result = [];

                                    var newresult = rowObject;


                                    //newresult.forEach(c => {

                                    let x = {

                           ");
            WriteLiteral(@"             doc_Tran_No: newresult[4].__EMPTY_14,
                                        ref_No: newresult[5].__EMPTY_14,
                                        do_Date: formatDate(new Date(newresult[6].__EMPTY_14)),
                                        valid_Date: formatDate(new Date(newresult[7].__EMPTY_14)),
                                        agent_Name: newresult[8].__EMPTY_6,
                                        vessel_Name: newresult[9].__EMPTY_2,
                                        voyage: newresult[9].__EMPTY_7,
                                        index_No: newresult[11].__EMPTY_2,
                                        bL_No: newresult[11].__EMPTY_7,
                                        igM_No: newresult[13].__EMPTY_7,
                                        //container_No: c.Container,
                                        pkg_Description: newresult[20].__EMPTY_6,
                                        goods_Desc: newresult[19].__EMPTY_8,
                   ");
            WriteLiteral(@"                     gross_Weight: newresult[16].__EMPTY_8,
                                        marks_No: newresult[19].__EMPTY,
                                        netWeight: newresult[16].__EMPTY_2,
                                        no_Of_Pkgs: newresult[19].__EMPTY_6,
                                        port_of_Arrival: newresult[13].__EMPTY_2,
                                        //conT_Size: c.Size,


                                    };

                                    result = x;

                                    //});/

                                    console.log(""result"", result)


                                    if (result) {

                                        $.post('/Import/ElectronicDeliveryOrder/SaveEDOFromExcel', { model: result }, function (data) {

                                            if (data.error == false) {
                                                showToast(data.message, ""success"")
                           ");
            WriteLiteral(@"                 } else {
                                                showToast(data.message, ""error"")
                                            }
                                        });
                                    }
                                    else {
                                        showToast(""please re select file or reload page"", ""error"")

                                    }
                                }


                            });
                        };
                        fileReader.readAsBinaryString(res);

                    })

                }
                else {
                    showToast(""please select a file"", ""error"")
                }

            }
            else {
                showToast(""please select a file"", ""error"")
            }
        });


    function formatDate(date) {

        /console.log(""date"", date.getTime())/
        return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + d");
            WriteLiteral("ate.getDate();\r\n    }\r\n\r\n\r\n\r\n\r\n</script>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
